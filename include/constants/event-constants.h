#ifndef EVENT_CONSTANTS_H
#define EVENT_CONSTANTS_H

#define EVENT_ALARM_EX                   0x2101      // External alarm 
#define DH_MOTION_ALARM_EX                  0x2102      // Motion detection alarm 
#define DH_VIDEOLOST_ALARM_EX               0x2103      // Video loss alarm 
#define DH_SHELTER_ALARM_EX                 0x2104      // Camera masking alarm 
#define DH_SOUND_DETECT_ALARM_EX            0x2105      // Audio detection alarm 
#define DH_DISKFULL_ALARM_EX                0x2106      // HDD full alarm 
#define DH_DISKERROR_ALARM_EX               0x2107      // HDD malfunction alarm 
#define DH_ENCODER_ALARM_EX                 0x210A      // Encoder alarm 
#define DH_URGENCY_ALARM_EX                 0x210B      // Emergency alarm 
#define DH_WIRELESS_ALARM_EX                0x210C      // Wireless alarm 
#define DH_NEW_SOUND_DETECT_ALARM_EX        0x210D      // New auido detection alarm. Please refer to DH_NEW_SOUND_ALARM_STATE for alarm information structure;
#define EVENT_DECODER_ALARM_EX           0x210E      // Alarm decoder alarm 
#define DH_DECODER_DECODE_ABILITY           0x210F      // NVD:Decoding capacity
#define DH_FDDI_DECODER_ABILITY             0x2110      // Fiber encoder alarm
#define DH_PANORAMA_SWITCH_ALARM_EX         0x2111      // Panorama switch alarm
#define DH_LOSTFOCUS_ALARM_EX               0x2112      // Lost focus alarm
#define DH_OEMSTATE_EX                      0x2113      // oem state
#define DH_DSP_ALARM_EX                     0x2114      // DSP alarm
#define DH_ATMPOS_BROKEN_EX                 0x2115      // atm and pos disconnection alarm, 0:disconnection 1:connection
#define DH_RECORD_CHANGED_EX                0x2116      // Record state changed alarm
#define DH_CONFIG_CHANGED_EX                0x2117      // Device config changed alarm
#define DH_DEVICE_REBOOT_EX                 0x2118      // Device rebooting alarm
#define DH_WINGDING_ALARM_EX                0x2119      // CoilFault alarm
#define DH_TRAF_CONGESTION_ALARM_EX         0x211A      // traffic congestion alarm
#define DH_TRAF_EXCEPTION_ALARM_EX          0x211B      // traffic exception alarm
#define DH_EQUIPMENT_FILL_ALARM_EX          0x211C      // FlashFault alarm
#define EVENT_ARM_DISARM_STATE           0x211D      // alarm arm disarm 
#define EVENT_ACC_POWEROFF               0x211E      // ACC power off alarm
#define EVENT_3GFLOW_EXCEED              0x211F      // Alarm of 3G flow exceed(see struct DHDEV_3GFLOW_EXCEED_STATE_INFO)
#define EVENT_SPEED_LIMIT                0x2120      // Speed limit alarm 
#define EVENT_VEHICLE_INFO_UPLOAD        0x2121      // Vehicle information uploading 
#define DH_STATIC_ALARM_EX                  0x2122      // Static detection alarm
#define DH_PTZ_LOCATION_EX                  0x2123      // ptz location info
#define EVENT_CARD_RECORD_UPLOAD         0x2124      // card record info(struct ALARM_CARD_RECORD_INFO_UPLOAD)
#define EVENT_ATM_INFO_UPLOAD            0x2125      // ATM trade info(struct ALARM_ATM_INFO_UPLOAD)
#define EVENT_ENCLOSURE                  0x2126      // enclosure alarm(struct ALARM_ENCLOSURE_INFO)
#define EVENT_SIP_STATE                  0x2127      // SIP state alarm(struct ALARM_SIP_STATE)
#define EVENT_RAID_STATE                 0x2128      // RAID state alarm(struct ALARM_RAID_INFO)
#define EVENT_CROSSING_SPEED_LIMIT       0x2129      // crossing speed limit alarm(struct ALARM_SPEED_LIMIT)
#define EVENT_OVER_LOADING               0x212A      // over loading alarm(struct ALARM_OVER_LOADING)
#define EVENT_HARD_BRAKING               0x212B      // hard brake alarm(struct ALARM_HARD_BRAKING)
#define EVENT_SMOKE_SENSOR               0x212C      // smoke sensor alarm(struct ALARM_SMOKE_SENSOR)
#define EVENT_TRAFFIC_LIGHT_FAULT        0x212D      // traffic light fault alarm(struct ALARM_TRAFFIC_LIGHT_FAULT) 
#define EVENT_TRAFFIC_FLUX_STAT          0x212E      // traffic flux alarm(struct ALARM_TRAFFIC_FLUX_LANE_INFO)
#define EVENT_CAMERA_MOVE                0x212F      // camera move alarm(struct ALARM_CAMERA_MOVE_INFO)
#define EVENT_DETAILEDMOTION             0x2130      // detailed motion alarm(struct ALARM_DETAILEDMOTION_CHNL_INFO)
#define EVENT_STORAGE_FAILURE            0x2131      // storage failure alarm(struct ALARM_STORAGE_FAILURE)
#define EVENT_FRONTDISCONNECT            0x2132      // front IPC disconnect alarm(struct ALARM_FRONTDISCONNET_INFO)
#define EVENT_ALARM_EX_REMOTE            0x2133      // remote external alarm
#define EVENT_BATTERYLOWPOWER            0x2134      // battery low power alarm(struct ALARM_BATTERYLOWPOWER_INFO)
#define EVENT_TEMPERATURE                0x2135      // temperature alarm(struct ALARM_TEMPERATURE_INFO)
#define EVENT_TIREDDRIVE                 0x2136      // tired drive alarm(struct ALARM_TIREDDRIVE_INFO)
#define EVENT_LOST_RECORD                0x2137      // Alarm of record loss (corresponding structure ALARM_LOST_RECORD)
#define EVENT_HIGH_CPU                   0x2138      // Alarm of High CPU Occupancy rate (corresponding structure ALARM_HIGH_CPU) 
#define EVENT_LOST_NETPACKET             0x2139      // Alarm of net package loss (corresponding structure ALARM_LOST_NETPACKET)
#define EVENT_HIGH_MEMORY                0x213A      // Alarm of high memory occupancy rate(corresponding structure ALARM_HIGH_MEMORY)
#define DH_LONG_TIME_NO_OPERATION           0x213B      // WEB user have no operation for long time (no extended info)
#define DH_BLACKLIST_SNAP                   0x213C      // blacklist snap(corresponding to DH_BLACKLIST_SNAP_INFO)         
#define EVENT_DISK                       0x213E      // alarm of disk(corresponding to ALARM_DISK_INFO)
#define EVENT_FILE_SYSTEM                0x213F      // alarm of file system(corresponding to ALARM_FILE_SYSTEM_INFO)
#define EVENT_IVS                        0x2140      // alarm of ivs(corresponding to ALARM_IVS_INFO)
#define EVENT_GOODS_WEIGHT_UPLOAD        0x2141      // goods weight (corresponding to ALARM_GOODS_WEIGHT_UPLOAD_INFO)
#define EVENT_GOODS_WEIGHT               0x2142      // alarm of goods weight(corresponding to ALARM_GOODS_WEIGHT_INFO)
#define DH_GPS_STATUS                       0x2143      // GPS orientation info(corresponding to NET_GPS_STATUS_INFO)
#define EVENT_DISKBURNED_FULL            0x2144      // alarm disk burned full(corresponding to ALARM_DISKBURNED_FULL_INFO)
#define EVENT_STORAGE_LOW_SPACE          0x2145      // storage low space(corresponding to ALARM_STORAGE_LOW_SPACE_INFO)
#define EVENT_DISK_FLUX                  0x2160      // disk flux abnormal(corresponding to ALARM_DISK_FLUX)
#define EVENT_NET_FLUX                   0x2161      // net flux abnormal(corresponding to ALARM_NET_FLUX)
#define EVENT_FAN_SPEED                  0x2162      // fan speed abnormal(corresponding to ALARM_FAN_SPEED)
#define EVENT_STORAGE_FAILURE_EX         0x2163      // storage mistake(corresponding to ALARM_STORAGE_FAILURE_EX)
#define EVENT_RECORD_FAILED              0x2164      // record abnormal(corresponding to ALARM_RECORD_FAILED_INFO)
#define EVENT_STORAGE_BREAK_DOWN         0x2165      // storage break down(corresponding to ALARM_STORAGE_BREAK_DOWN_INFO)
#define EVENT_VIDEO_ININVALID            0x2166      // ALARM_VIDEO_ININVALID_INFO
#define EVENT_VEHICLE_TURNOVER           0x2167      // vehicle turnover arm event(struct ALARM_VEHICEL_TURNOVER_EVENT_INFO)
#define EVENT_VEHICLE_COLLISION          0x2168      // vehicle collision event(struct ALARM_VEHICEL_COLLISION_EVENT_INFO)
#define EVENT_VEHICLE_CONFIRM            0x2169      // vehicle confirm information event(struct ALARM_VEHICEL_CONFIRM_INFO)
#define EVENT_VEHICLE_LARGE_ANGLE        0x2170      // vehicle camero large angle event(struct ALARM_VEHICEL_LARGE_ANGLE)
#define EVENT_TALKING_INVITE             0x2171      // device talking invite event (struct ALARM_TALKING_INVITE_INFO)
#define EVENT_ALARM_EX2                  0x2175      // local alarm event (struct ALARM_ALARM_INFO_EX2, upgrade DH_ALARM_ALARM_EX)
#define EVENT_VIDEO_TIMING               0x2176      // video timing detecting event(struct ALARM_VIDEO_TIMING)
#define EVENT_COMM_PORT                  0x2177      // COM event(struct ALARM_COMM_PORT_EVENT_INFO)
#define EVENT_AUDIO_ANOMALY              0x2178      // audio anomaly event(struct ALARM_AUDIO_ANOMALY)
#define EVENT_AUDIO_MUTATION             0x2179      // audio mutation event(struct ALARM_AUDIO_MUTATION)
#define DH_EVENT_TYREINFO                   0x2180      // Tyre information report event (struct EVENT_TYRE_INFO)
#define EVENT_POWER_ABNORMAL             0x2181      // Redundant power supplies abnormal alarm(struct ALARM_POWER_ABNORMAL_INFO)
#define DH_EVENT_REGISTER_OFF               0x2182      // On-board equipment active offline events(struct  EVENT_REGISTER_OFF_INFO)
#define EVENT_NO_DISK                    0x2183      // No hard disk alarm(struct ALARM_NO_DISK_INFO)
#define EVENT_FALLING                    0x2184      // The fall alarm(struct ALARM_FALLING_INFO)
#define EVENT_PROTECTIVE_CAPSULE         0x2185      // Protective capsule event(corresponding structure ALARM_PROTECTIVE_CAPSULE_INFO)
#define EVENT_NO_RESPONSE                0x2186      // Call Non-response alarm(corresponding to ALARM_NO_RESPONSE_INFO)
#define EVENT_CONFIG_ENABLE_CHANGE       0x2187      // Config enable to change reported event(corresponding to structure  ALARM_CONFIG_ENABLE_CHANGE_INFO)
#define DH_EVENT_CROSSLINE_DETECTION        0x2188      // Cross warning line event( Corresponding to structure ALARM_EVENT_CROSSLINE_INFO )
#define DH_EVENT_CROSSREGION_DETECTION      0x2189      // Warning zone event(Corresponding to structure ALARM_EVENT_CROSSREGION_INFO )
#define DH_EVENT_LEFT_DETECTION             0x218a      // Abandoned object event(Corresponding to structure ALARM_EVENT_LEFT_INFO )
#define DH_EVENT_FACE_DETECTION             0x218b      // Human face detect event(Corresponding to structure ALARM_EVENT_FACE_INFO ) 
#define EVENT_IPC                        0x218c      // IPC alarm,IPC upload local alarm via DVR or NVR(Corresponding to structure ALARM_IPC_INFO)
#define DH_EVENT_TAKENAWAYDETECTION         0x218d      // Missing object event(Corresponding to structure ALARM_TAKENAWAY_DETECTION_INFO)
#define DH_EVENT_VIDEOABNORMALDETECTION     0x218e      // Video abnormal event(Corresponding to structure ALARM_VIDEOABNORMAL_DETECTION_INFO)
#define DH_EVENT_MOTIONDETECT               0x218f      // Video motion detect event  (Corresponding to structure ALARM_MOTIONDETECT_INFO)
#define EVENT_PIR                        0x2190      // PIR alarm (Corresponding to BYTE*, pBuf length dwBufLen)
#define EVENT_STORAGE_HOT_PLUG           0x2191      // Storage hot swap event(Corresponding to structure ALARM_STORAGE_HOT_PLUG_INFO)
#define EVENT_FLOW_RATE                  0x2192      // the event of rate of flow(Corresponding to structure ALARM_FLOW_RATE_INFO)
#define EVENT_MOVEDETECTION              0x2193      // Move detection event(Corresponding to structure ALARM_MOVE_DETECTION_INFO)
#define EVENT_WANDERDETECTION            0x2194      // WanderDetection event(Corresponding to structure ALARM_WANDERDETECTION_INFO)
#define EVENT_CROSSFENCEDETECTION        0x2195      // cross fence(Corresponding to ALARM_CROSSFENCEDETECTION_INFO)
#define EVENT_PARKINGDETECTION           0x2196      // parking detection event(Corresponding to ALARM_PARKINGDETECTION_INFO)
#define EVENT_RIOTERDETECTION            0x2197      // Rioter detection event(Corresponding to ALARM_RIOTERDETECTION_INFO)
#define EVENT_FRONTDISCONNECT_V3         0x2198      // front IPC disconnect alarm(V3)(struct ALARM_FRONTDISCONNET_INFO)
#define EVENT_KEYPAD_TAMPER				0x2199		// Keyboard tampering event(Corresponding to ALARM_KEYPAD_TAMPER_INFO)
#define EVENT_KEYPAD_FAILURE				0x219A		// Keyboard dropped event(Corresponding to ALARM_KEYPAD_FAILURE_INFO)
#define EVENT_NOT_CLEAR_CAR				0x219B		// Not clear car alarm event(Corresponding to ALARM_NOT_CLEAR_CAR_INFO)
#define EVENT_WIRELESS_DEVBATTERY_LOSS	0x219C		// Detector battery loss event(Corresponding to ALARM_WIRELESS_DEVBATTERY_LOSS_INFO)
#define EVENT_SIREN_TAMPER				0x219D		// Siren tamper event(Corresponding to ALARM_SIREN_TAMPER_INFO)
#define EVENT_KEYPAD_LOCK				0x219E		// Keyboard lock event(Corresponding to ALARM_KEYPAD_LOCK_INFO)
#define EVENT_ALARMNET					0x219F		// Network alarm event(Corresponding to ALARM_ALARMNET_INFO)
#define EVENT_PIC_UPLOAD_ALARM		    0x21A0		// Picture upload to notify external platform events(Corresponding to NET_ALARM_PIC_UPLOAD_ALARM_INFO)
#define EVENT_CHANG_BAI_VEHICLE_PROHIBITED	0x21A1	   // Vehicle Prohibited event(Corresponding to NET_ALARM_CHANG_BAI_VEHICLE_PROHIBITED_INFO)
#define EVENT_USER_PASS_CONFIRM				0x21A2	   // User Pass Confirm event(Corresponding to NET_ALARM_USER_PASS_CONFIRM_INFO)
#define EVENT_SYNC_USER_INFO					0x21A3	   // Sync User Info event(Corresponding to NET_ALARM_SYNC_USER_INFO)
#define EVENT_INSUFFICIENT_QUOTA_SPACE		0x21A4		// Quota Capacity Insufficient Events(Corresponding to NET_ALARM_INSUFFICIENT_QUOTA_SPACE_INFO)

// 0x3000 ~ 0x300c Internal events
#define DH_CONFIG_RESULT_EVENT_EX            0x3000        // Modify the return code of the setup. Please refer to DEV_SET_RESULT for returned structure.
#define DH_REBOOT_EVENT_EX                   0x3001        // Device reboot event. Current modification becomes valid until sending out the reboot command. 
#define DH_AUTO_TALK_START_EX                0x3002        // Device automatically invites to begin audio talk 
#define DH_AUTO_TALK_STOP_EX                 0x3003        // Device actively stop audio talk 
#define DH_CONFIG_CHANGE_EX                  0x3004        // Device setup changes.
#define DH_IPSEARCH_EVENT_EX                 0x3005        // IP search event, the return value format is:DevName::Manufacturer::MAC::IP::Port::DevType::POEPort::SubMask::GateWay&&DevName::Manufacturer::MAC::IP::Port::DevType::POEPort::SubMask::GateWay &&
#define DH_AUTO_RECONNECT_FAILD              0x3006        // reconnect failed
#define DH_REALPLAY_FAILD_EVENT              0x3007        // real play failed
#define DH_PLAYBACK_FAILD_EVENT              0x3008        // playback failed
#define DH_IVS_TRAFFIC_REALFLOWINFO          0x3009        // traffic real flow info ALARM_IVS_TRAFFIC_REALFLOW_INFO
#define DH_DEVICE_ABORT_EVENT                0x300a        // Client end is out, corresponding to structure  DEV_CLIENT_ABORT_INFO
#define DH_TALK_FAILD_EVENT                  0x300b        // failed to request talk, corresponding to  structure  DEV_TALK_RESULT
#define DH_START_LISTEN_FINISH_EVENT         0x300c        // start listen interface finish asyn notify event, corresponding to  structure START_LISTEN_FINISH_RESULT_INFO

#define DH_YUEQINGLIGHTING_STATE_EVENT       0x300d        // Statistical light switch time, corresponding to DEV_YUEQINGLIGHTING_STATE_INFO
#define EVENT_VIOLATE_NO_FLY_TIME         0x300e        // violate NoFlyTime event, corresponding to ALARM_VIOLATE_NO_FLY_TIME_INFO
#define EVENT_BOX_ALARM			         0x300f		   // alarm box alarm (corresponding to ALARM_BOX_ALARM_INFO )
#define	DH_ALARM_SOSALERT					 0x3010		   // SOS alert(corresponding to ALARM_SOSALERT_INFO)
#define EVENT_GYROABNORMALATTITUDE		 0x3011		   // The Vehicle's emergency braking and carwheel are caused alarm(corresponding to ALARM_GYROABNORMALATTITUDE_INFO)
#define EVENT_ALARMOUTPUT				 0x3012		   // Output channel change(corresponding to ALARM_ALARMOUTPUT_INFO)
#define EVENT_PSTNREPORTFAILURE			 0x3013		   // PSTN report failure(corresponding to ALARM_PSTNREPORTFAILURE_INFO)
#define EVENT_NOGSMFIELD					 0x3014		   // Communicating module offline or no sim card(corresponding to ALARM_NOGSMFIELD_INFO)
#define EVENT_SMARTMOTION_HUMAN 			 0x3015		   // Smart video motion detection(human) (corresponding to ALARM_SMARTMOTION_HUMAN_INFO)
#define EVENT_SMARTMOTION_VEHICLE		 0x3016		   // Smart video motion detection(vehicle) (corresponding to ALARM_SMARTMOTION_VEHICLE_INFO)
#define EVENT_MOTION_RECORD_ALARM         0x3017		   // Video motion record alarm (corresponding to ALARM_MOTION_RECORD_INFO)
#define EVENT_SMARTHOME_GET_AUTHORIZED	 0x3018		   // device notify platform to get authorized QRCode info ( corresponding to DEV_EVENT_SMARTHOME_GET_AUTHORIZED )
#define EVENT_SMARTHOME_UPDATE_SCENE		 0x3019		   // device notify platform to update scene list ( corresponding to ALARM_SMARTHOME_UPDATE_SCENE )
#define EVENT_ASG						 0x3020		   // ASG alarm (corresponding to ALARM_ASG_INFO)		
#define EVENT_ASGSTAY                    0x3021         // ASG stay( corresponding to ALARM_ASGSTAY_INFO )
#define EVENT_ASGFOLLOWING               0x3022         // ASG following( corresponding to ALARM_ASGFOLLOWING_INFO )
#define EVENT_ASGCLIMBOVER               0x3023         // ASG limb over( corresponding to ALARM_ASGCLIMBOVER_INFO )
#define EVENT_ASGBREAKDOWN               0x3024         // ASG break down( corresponding to ALARM_ASGBREAKDOWN_INFO )		
#define EVENT_LIFTCONTROL_REQUEST		0x3025		   // Lift control request(corresponding to ALARM_LIFTCONTROL_REQUEST_INFO)
#define EVENT_REMOTE_DEVICE_GPS			0x3026		   // RemoteDevice GPS(corresponding to ALARM_REMOTE_DEVICE_GPS_INFO)
#define EVENT_ENTRANCE_CAR_STAT_INFO		0x3027		   // Entrance car stat info (corresponding to ALARM_ENTRANCE_CAR_STAT_INFO)
#define EVENT_ASG_INTRUDED				0x3028		   // ASG intruded alarm(corresponding to ALARM_ASG_INTRUDED_INFO)
#define EVENT_IDCARDINFO_CHECK			0x3029		   // IDCard info report, platform check and open door event( corresponding to  ALARM_IDCARDINFO_CHECK_INFO )
#define EVENT_REQUEST_APPOINTMENT_INFO	0x302a		   // request appointment info ( corresponding to ALARM_REQUEST_APPOINTMENT_INFO )
#define EVENT_COURSE_RECORD_UPLOAD       0x302b         // course recode upload finished event (corresponding to ALARM_COURSE_RECORD_UPLOAD_INFO)
#define EVENT_REQUEST_RECORD				0x302c		   // request record (corresponding to ALARM_REQUEST_RECORD_INFO )
#define EVENT_REQUEST_SNAP				0x302d		   // request snap (corresponding to ALARM_REQUEST_SNAP_INFO )
#define EVENT_PARKING_OVERLOAD           0x302e         // parking overload(corresponding to ALARM_PARKING_OVERLOAD_INFO)
#define EVENT_VTS_CALLING_STATE          0x302f         // VTS calling state(corresponding to ALARM_VTS_CALLING_STATE_INFO)
#define EVENT_DRUG_EXPLOSIVE_DETECTION	0x3030		   // Drug and explosive detection incident(corresponding to ALARM_DRUG_EXPLOSIVE_DETECTION_INFO)
#define EVENT_LIQUID_DETECTION			0x3031		   // Liquid detection event(corresponding to ALARM_LIQUID_DETECTION_INFO) 
#define EVENT_ASG_ANTIPINCH				0x3032		   // Anti-pinch incident of gate wing of gate(corresponding to ALARM_ASG_ANTIPINCH_INFO) 

#define EVENT_STORAGE_NOT_EXIST          0x3167      // A storage group does not exist(struct ALARM_STORAGE_NOT_EXIST_INFO)
#define EVENT_NET_ABORT                  0x3169      // Network fault event(struct ALARM_NETABORT_INFO)
#define EVENT_IP_CONFLICT                0x3170      // IP conflict event(struct ALARM_IP_CONFLICT_INFO)
#define EVENT_MAC_CONFLICT               0x3171      // MAC conflict event(struct ALARM_MAC_CONFLICT_INFO)
#define EVENT_POWERFAULT                 0x3172      // power fault event(struct ALARM_POWERFAULT_INFO)
#define EVENT_CHASSISINTRUDED            0x3173      // Chassis intrusion, tamper alarm events(struct ALARM_CHASSISINTRUDED_INFO)
#define EVENT_ALARMEXTENDED              0x3174      // Native extension alarm events(struct ALARM_ALARMEXTENDED_INFO)
#define EVENT_ARMMODE_CHANGE_EVENT       0x3175      // Cloth removal state change events(struct ALARM_ARMMODE_CHANGE_INFO)
#define EVENT_BYPASSMODE_CHANGE_EVENT    0x3176      // The bypass state change events(struct ALARM_BYPASSMODE_CHANGE_INFO)
#define EVENT_ACCESS_CTL_NOT_CLOSE       0x3177      // Entrance guard did not close events(struct ALARM_ACCESS_CTL_NOT_CLOSE_INFO)
#define EVENT_ACCESS_CTL_BREAK_IN        0x3178      // break-in event(struct ALARM_ACCESS_CTL_BREAK_IN_INFO)
#define EVENT_ACCESS_CTL_REPEAT_ENTER    0x3179      //access Again and again event(struct ALARM_ACCESS_CTL_REPEAT_ENTER_INFO)
#define EVENT_ACCESS_CTL_DURESS          0x3180      // Stress CARDS event(struct ALARM_ACCESS_CTL_DURESS_INFO)
#define EVENT_ACCESS_CTL_EVENT           0x3181      // Access event(struct ALARM_ACCESS_CTL_EVENT_INFO)
#define DH_URGENCY_ALARM_EX2                0x3182      // Emergency ALARM EX2(upgrade DH_URGENCY_ALARM_EX,struct ALARM_URGENCY_ALARM_EX2, Artificially triggered emergency, general processing is linked external communication function requests for help
#define EVENT_INPUT_SOURCE_SIGNAL        0x3183      // Alarm input source signal events (as long as there is input will generate the event, whether to play the current mode, unable to block, struct ALARM_INPUT_SOURCE_SIGNAL_INFO)
#define EVENT_ANALOGALARM_EVENT          0x3184      // analog alarm(struct ALARM_ANALOGALARM_EVENT_INFO)
#define EVENT_ACCESS_CTL_STATUS          0x3185      // Access control status event(corresponding structure ALARM_ACCESS_CTL_STATUS_INFO)
#define EVENT_ACCESS_SNAP                0x3186      // Access control snapshot event(corresponding to ALARM_ACCESS_SNAP_INFO)
#define EVENT_ALARMCLEAR                 0x3187      // Cancel alarm(corresponding to structure ALARM_ALARMCLEAR_INFO)
#define EVENT_CIDEVENT                   0x3188      // CID event(corresponding to structure ALARM_CIDEVENT_INFO)
#define EVENT_TALKING_HANGUP             0x3189      // Device hand up evnt(corresponding to structure ALARM_TALKING_HANGUP_INFO)
#define EVENT_BANKCARDINSERT             0x318a      // Bank card evnt(corresponding to structure ALARM_BANKCARDINSERT_INFO)
#define EVENT_RCEMERGENCY_CALL           0x318b      // Emergency call alarm event(corresponding to structure ALARM_RCEMERGENCY_CALL_INFO)
#define EVENT_OPENDOORGROUP              0x318c      // Multi-people group unlock event(corresponding to  structure ALARM_OPEN_DOOR_GROUP_INFO)
#define EVENT_FINGER_PRINT               0x318d      // get fingerprint event(corresponding to  structure ALARM_CAPTURE_FINGER_PRINT_INFO)
#define EVENT_CARD_RECORD                0x318e      // card no. record event(corresponding to  structure  ALARM_CARD_RECORD_INFO)
#define EVENT_SUBSYSTEM_STATE_CHANGE     0x318f      // sub system status change event(corresponding to  structure ALARM_SUBSYSTEM_STATE_CHANGE_INFO)
#define EVENT_BATTERYPOWER_EVENT         0x3190      // battery scheduled warning event(corresponding to  structure ALARM_BATTERYPOWER_INFO)
#define EVENT_BELLSTATUS_EVENT           0x3191      // bell status event(corresponding to  structure ALARM_BELLSTATUS_INFO)
#define EVENT_DEFENCE_STATE_CHANGE_EVENT 0x3192      // zone status change event(corresponding to  structure ALARM_DEFENCE_STATUS_CHANGE_INFO), 
// customized need, and arm/disarm change event, bypass event status have different definitions,
// The status via CLIENT_QueryDevState() port DH_DEVSTATE_DEFENCE_STATE command get
#define EVENT_TICKET_STATISTIC           0x3193      // ticket statistics info event(corresponding to  structure  ALARM_TICKET_STATISTIC)
#define EVENT_LOGIN_FAILIUR              0x3194      // login failed event(corresponding to  structure ALARM_LOGIN_FAILIUR_INFO)
#define EVENT_MODULE_LOST                0x3195      // expansion module offline event(corresponding to  structure  ALARM_MODULE_LOST_INFO)
#define EVENT_PSTN_BREAK_LINE            0x3196      // PSTN offline event(corresponding to  structure ALARM_PSTN_BREAK_LINE_INFO)
#define EVENT_ANALOG_PULSE               0x3197      // analog alarm event(instant event), specific sensor  trigger(corresponding to  structure ALARM_ANALOGPULSE_INFO)
#define EVENT_MISSION_CONFIRM            0x3198      // task confirmation event(corresponding to  structure  ALARM_MISSION_CONFIRM_INFO)
#define EVENT_DEVICE_MSG_NOTIFY          0x3199      // device to platform notice event(corresponding to  structure  ALARM_DEVICE_MSG_NOTIFY_INFO)
#define EVENT_VEHICLE_STANDING_OVER_TIME 0x319A      // parking timeout event(corresponding to  structure  ALARM_VEHICLE_STANDING_OVER_TIME_INFO)
#define EVENT_ENCLOSURE_ALARM            0x319B      // e-fence event(corresponding to  structure  ALARM_ENCLOSURE_ALARM_INFO)
#define EVENT_GUARD_DETECT               0x319C      // station detection event, one in station first report the start event, and last on in station report stop event before leave (corresponding to  structure ALARM_GUARD_DETECT_INFO)
#define EVENT_GUARD_INFO_UPDATE          0x319D      // station info update event, report if people in station(corresponding to  structure ALARM_GUARD_UPDATE_INFO)  
#define EVENT_NODE_ACTIVE                0x319E      // Node activation event (corresponding to structure ALARM_NODE_ACTIVE_INFO)
#define EVENT_VIDEO_STATIC               0x319F      // Video static detection event (corresponding to structure ALARM_VIDEO_STATIC_INFO)
#define EVENT_REGISTER_REONLINE          0x31a0      // Active registration device re-login event (corresponding to structure ALARM_REGISTER_REONLINE_INFO)
#define EVENT_ISCSI_STATUS               0x31a1      // ISCSI alarm event (corresponding to structure ALARM_ISCSI_STATUS_INFO)
#define EVENT_SCADA_DEV_ALARM            0x31a2      // detection collection device alarm event (corresponding to structure ALARM_SCADA_DEV_INFO)
#define EVENT_AUXILIARY_DEV_STATE        0x31a3      // Sub device status(corresponding structure ALARM_AUXILIARY_DEV_STATE)
#define EVENT_PARKING_CARD               0x31a4      // Parking swipe card event(corresponding structure ALARM_PARKING_CARD)
#define EVENT_PROFILE_ALARM_TRANSMIT     0x31a5      // Alarm transmit event(corresponding structure ALARM_PROFILE_ALARM_TRANSMIT_INFO)
#define EVENT_VEHICLE_ACC                0x31a6      // Vehicle acc event(corresponding structure ALARM_VEHICLE_ACC_INFO)
#define EVENT_TRAFFIC_SUSPICIOUSCAR      0x31a7      // suspiciouscar event(corresponding structure ALARM_TRAFFIC_SUSPICIOUSCAR_INFO)
#define EVENT_ACCESS_LOCK_STATUS         0x31a8      // the event of latch state (corresponding structure  ALARM_ACCESS_LOCK_STATUS_INFO)
#define EVENT_FINACE_SCHEME              0x31a9      // Finace scheme event(corresponding structure ALARM_FINACE_SCHEME_INFO)
#define EVENT_HEATIMG_TEMPER             0x31aa      // Thermal temperature abnormal event alarm(Corresponding to structure ALARM_HEATIMG_TEMPER_INFO)
#define EVENT_TALKING_IGNORE_INVITE      0x31ab      // Device cancel bidirectional talk query event(Corresponding to structure ALARM_TALKING_IGNORE_INVITE_INFO)
#define EVENT_BUS_SHARP_TURN             0x31ac      // Vehicle Abrupt-turn event(Corresponding to structure ALARM_BUS_SHARP_TURN_INFO)
#define EVENT_BUS_SCRAM                  0x31ad      // vehicle abrupt stop event(Corresponding to structure ALARM_BUS_SCRAM_INFO)
#define EVENT_BUS_SHARP_ACCELERATE       0x31ae      // Vehicle abrupt speed up event(Corresponding to structure ALARM_BUS_SHARP_ACCELERATE_INFO)
#define EVENT_BUS_SHARP_DECELERATE       0x31af      // Vehicle abrupt slow down event (Corresponding to structure ALARM_BUS_SHARP_DECELERATE_INFO)
#define EVENT_ACCESS_CARD_OPERATE        0x31b0      // A&C data operation event (Corresponding to structure ALARM_ACCESS_CARD_OPERATE_INFO)
#define EVENT_POLICE_CHECK               0x31b1      // Policeman check in event(Corresponding to structure ALARM_POLICE_CHECK_INFO)
#define EVENT_NET                        0x31b2      // Network alarm event(Corresponding to structure ALARM_NET_INFO)
#define EVENT_NEW_FILE                   0x31b3      // New file event(Corresponding to structure ALARM_NEW_FILE_INFO)
#define EVENT_FIREWARNING                0x31b5      // Thermal fire position (Corresponding to structure ALARM_FIREWARNING_INFO)
#define EVENT_RECORD_LOSS                0x31b6      // Record loss event: the HDD is OK, delete results from misoperation.  (Corresponding to structure ALARM_RECORD_LOSS_INFO)
#define EVENT_VIDEO_FRAME_LOSS           0x31b7      // Frame loss event: it results from poor network environment or insufficient encode capability (Corresponding to structure ALARM_VIDEO_FRAME_LOSS_INFO)
#define EVENT_RECORD_VOLUME_FAILURE      0x31b8      // Abnormal record results from HDD volume(Corresponding to structure ALARM_RECORD_VOLUME_FAILURE_INFO)
#define DH_EVENT_SNAP_UPLOAD                0x31b9      // Image upload completion event(Corresponding to structure EVENT_SNAP_UPLOAD_INFO)
#define EVENT_AUDIO_DETECT               0x31ba      // Audio detect event(Corresponding to structure ALARM_AUDIO_DETECT )
#define EVENT_UPLOADPIC_FAILCOUNT        0x31bb      // Failure data amount during the image upload process (Corresponding to structure ALARM_UPLOADPIC_FAILCOUNT_INFO)
#define EVENT_POS_MANAGE                 0x31bc      // POS management event(Corresponding to ALARM_POS_MANAGE_INFO )
#define EVENT_REMOTE_CTRL_STATUS         0x31bd      // remote control status(Corresponding to ALARM_REMOTE_CTRL_STATUS )
#define EVENT_PASSENGER_CARD_CHECK       0x31be      // desuetude, passenger card check(Corresponding to structure ALARM_PASSENGER_CARD_CHECK )
#define EVENT_SOUND                      0x31bf      // Sound event(Corresponding to ALARM_SOUND )
#define EVENT_LOCK_BREAK                 0x31c0      // Lock break event(Corresponding to ALARM_LOCK_BREAK_INFO )
#define EVENT_HUMAN_INSIDE               0x31c1      // Human Inside event((Corresponding to structure ALARM_HUMAN_INSIDE_INFO)
#define EVENT_HUMAN_TUMBLE_INSIDE        0x31c2      // Human tumble Inside(Corresponding to structure ALARM_HUMAN_TUMBLE_INSIDE_INFO)
#define EVENT_DISABLE_LOCKIN             0x31c3      // Lock entry trigger event(Corresponding to structure ALARM_DISABLE_LOCKIN_INFO)
#define EVENT_DISABLE_LOCKOUT            0x31c4      // Lock go out trigger(Corresponding to structure ALARM_DISABLE_LOCKOUT_INFO)
#define EVENT_UPLOAD_PIC_FAILED          0x31c5      // break rules data upload failed (Corresponding to ALARM_UPLOAD_PIC_FAILED_INFO )
#define EVENT_FLOW_METER                 0x31c6      // flow meter info event (ALARM_FLOW_METER_INFO)
#define EVENT_WIFI_SEARCH                0x31c7      // search around wifi device(Corresponding to ALARM_WIFI_SEARCH_INFO)
#define EVENT_WIRELESSDEV_LOWPOWER       0x31C8      // lowpower of wirelessdevice(ALARM_WIRELESSDEV_LOWPOWER_INFO)
#define EVENT_PTZ_DIAGNOSES               0x31c9     // PTZ Diagnoses event(Corresponding to ALARM_PTZ_DIAGNOSES_INFO)
#define EVENT_FLASH_LIGHT_FAULT          0x31ca      // flash light fault event (Corresponding to ALARM_FLASH_LIGHT_FAULT_INFO)
#define EVENT_STROBOSCOPIC_LIGTHT_FAULT  0x31cb      // stroboscopic light fault event (Corresponding to ALARM_STROBOSCOPIC_LIGTHT_FAULT_INFO)
#define EVENT_HUMAM_NUMBER_STATISTIC     0x31cc      // NumberStat event (Corresponding to ALARM_HUMAN_NUMBER_STATISTIC_INFO)
#define EVENT_VIDEOUNFOCUS               0x31ce      // Video unfocus (Corresponding ALARM_VIDEOUNFOCUS_INFO)
#define EVENT_BUF_DROP_FRAME             0x31cd      // Video recond buffer drop frame event(Corresponding to ALARM_BUF_DROP_FRAME_INFO)
#define EVENT_DOUBLE_DEV_VERSION_ABNORMAL 0x31cf     // Abnormal event when master broad'version and slave broad'version different  (Corresponding to ALARM_DOUBLE_DEV_VERSION_ABNORMAL_INFO)
#define EVENT_DCSSWITCH                  0x31d0      // Switch with master and slave(Corresponding to ALARM_DCSSWITCH_INFO)
#define EVENT_RADAR_CONNECT_STATE        0x31d1      // Radar connect state(Corresponding to ALARM_RADAR_CONNECT_STATE_INFO)
#define EVENT_DEFENCE_ARMMODE_CHANGE     0x31d2      // Defence arming status change(Corresponding to ALARM_DEFENCE_ARMMODECHANGE_INFO)
#define EVENT_SUBSYSTEM_ARMMODE_CHANGE   0x31d3      // Subsystem arming status change(Corresponding to ALARM_SUBSYSTEM_ARMMODECHANGE_INFO)
#define EVENT_RFID_INFO                  0x31d4      // infrared detection information event (Corresponding ALARM_RFID_INFO)
#define EVENT_SMOKE_DETECTION            0x31d5      // smoke detection(Corresponding ALARM_SMOKE_DETECTION_INFO)
#define EVENT_BETWEENRULE_TEMP_DIFF      0x31d6      // TemperatureDifference Between Rule (Corresponding ALARM_BETWEENRULE_DIFFTEMPER_INFO)
#define EVENT_TRAFFIC_PIC_ANALYSE        0x31d7      // Traffic picture analyse(Corresponding ALARM_PIC_ANALYSE_INFO)
#define EVENT_HOTSPOT_WARNING            0x31d8      // Hotspot warning(Corresponding ALARM_HOTSPOT_WARNING_INFO)
#define EVENT_COLDSPOT_WARNING           0x31d9      // coldspot warning(Corresponding ALARM_COLDSPOT_WARNING_INFO)
#define EVENT_FIREWARNING_INFO           0x31da      // firewarning (Corresponding ALARM_FIREWARNING_INFO_DETAIL)
#define EVENT_FACE_OVERHEATING           0x31db      // face overheating(Corresponding ALARM_FACE_OVERHEATING_INFO)
#define EVENT_SENSOR_ABNORMAL            0x31dc      // Sensor abnormal(Corresponding ALARM_SENSOR_ABNORMAL_INFO)
#define EVENT_PATIENTDETECTION           0x31de      // patient detection(Corresponding ALARM_PATIENTDETECTION_INFO)
#define EVENT_RADAR_HIGH_SPEED           0x31df      // radar high speed detection(Corresponding to ALARM_RADAR_HIGH_SPEED_INFO)
#define EVENT_POLLING_ALARM              0x31e0      // Polling Alarm (Corresponding to ALARM_POLLING_ALARM_INFO)
#define EVENT_ITC_HWS000                 0x31e1      // the alarm event for ITC_HWS000 (Corresponding ALARM_ITC_HWS000)
#define EVENT_TRAFFICSTROBESTATE         0x31e2      // Traffic Strobe State(Corresponding to ALARM_TRAFFICSTROBESTATE_INFO)
#define EVENT_TELEPHONE_CHECK            0x31e3      // telephone number check event(Corresponding to ALARM_TELEPHONE_CHECK_INFO)
#define EVENT_PASTE_DETECTION            0x31e4      // Paste Detection(Corresponding to ALARM_PASTE_DETECTION_INFO )
#define EVENT_SHOOTINGSCORERECOGNITION   0x31e5      // the alarm event for Shooting (Corresponding to ALARM_PIC_SHOOTINGSCORERECOGNITION_INFO)
#define EVENT_SWIPEOVERTIME              0x31e6      // the alarm event for swipe overtime(Corresponding to ALARM_SWIPE_OVERTIME_INFO)
#define EVENT_DRIVING_WITHOUTCARD        0x31e7      // the alarm event for driving without card(Corresponding to ALARM_DRIVING_WITHOUTCARD_INFO)
#define EVENT_TRAFFIC_PEDESTRIAN_RUN_REDLIGHT_DETECTION 0x31e8  //red light event (Corresponding to ALARM_TRAFFIC_PEDESTRIAN_RUN_REDLIGHT_DETECTION_INFO)
#define EVENT_FIGHTDETECTION             0x31e9      //the alarm event for fight detection(Corresponding to NET_ALARM_FIGHTDETECTION)
#define EVENT_OIL_4G_OVERFLOW            0x31ea      //the alarm event for fushan oil 4G over flow threshold(Corresponding to NET_ALARM_OIL_4G_OVERFLOW_INFO)
#define EVENT_ACCESSIDENTIFY             0x31eb      //VTO access identify(Corresponding to NET_ALARM_ACCESSIDENTIFY_INFO)
#define EVENT_POWER_SWITCHER_ALARM       0x31ec      // the alarm event for Abnormal power switcher (Corresponding to DEV_ALRAM_POWERSWITCHER_INFO)
#define EVENT_SCENNE_CHANGE_ALARM        0x31ed      // the alarm event for scene change (Corresponding to ALARM_PIC_SCENECHANGE_INFO)
#define EVENT_WIFI_VIRTUALINFO_SEARCH    0x31ef      // the alarm event for WIFI virtual information(Corresponding to ALARM_WIFI_VIRTUALINFO_SEARCH_INFO)
#define EVENT_TRAFFIC_OVERSPEED          0x31f0      // traffic overspeed event(Corresponding to event  ALARM_TRAFFIC_OVERSPEED_INFO)
#define EVENT_TRAFFIC_UNDERSPEED         0x31f1      // traffic underspeed event(Corresponding to event  ALARM_TRAFFIC_NDERSPEED_INFO)
#define EVENT_TRAFFIC_PEDESTRAIN         0x31f2      // traffic pedestrain event(Corresponding to event  ALARM_TRAFFIC_PEDESTRAIN_INFO)
#define EVENT_TRAFFIC_JAM                0x31f3      // traffic jam event(Corresponding to event  ALARM_TRAFFIC_JAM_INFO)
#define EVENT_TRAFFIC_PARKING            0x31f4      // traffic parking event(Corresponding to event  ALARM_TRAFFIC_PARKING_INFO)
#define EVENT_TRAFFIC_THROW              0x31f5      // traffic throw event(Corresponding to event  ALARM_TRAFFIC_THROW_INFO)
#define EVENT_TRAFFIC_RETROGRADE         0x31f6      // traffic retrograde event(Corresponding to event  ALARM_TRAFFIC_RETROGRADE_INFO)
#define EVENT_VTSTATE_UPDATE             0x31f7      // VTS state update(Corresponding to ALARM_VTSTATE_UPDATE_INFO)
#define EVENT_CALL_NO_ANSWERED           0x31f8      // the alarm event for call no answer, under directly connected(Corresponding to NET_ALARM_CALL_NO_ANSWERED_INFO)
#define EVENT_USER_LOCK_EVENT            0x31f9      // User Lock Alarm Event
#define EVENT_RETROGRADE_DETECTION       0x31fa      // retrogade dection event(Corresponding to ALARM_RETROGRADE_DETECTION_INFO)
#define EVENT_AIO_APP_CONFIG_EVENT       0x31fb      // AIO App config event(Corresponding to NET_ALARM_AIO_APP_CONFIG_EVENT)
#define EVENT_RAID_STATE_EX              0x31fc      // RAID state alarm(Corresponding to struct ALARM_RAID_INFO_EX)
#define EVENT_STORAGE_IPC_FAILURE        0x31fd      // IPC storage failure alarm(IPC SD Card Abnormal Alarm)(Corresponding to struct ALARM_STORAGE_IPC_FAILURE_INFO)
#define EVENT_DEVICE_STAY                0x31fe      // Still amarm, if the device coordinates are not changed in the specified time, the still alarm information is triggered(Corresponding to struct ALARM_DEVICE_STAY_INFO)    
#define EVENT_SUB_WAY_DOOR_STATE         0x31ff      // the door state of subway(Corresponding to ALARM_SUB_WAY_DOOR_STATE_INFO)
#define EVENT_SUB_WAY_PECE_SWITCH        0x3200      // the PECE switch state of subway(Corresponding to ALARM_SUB_WAY_PECE_SWITCH_INFO)
#define EVENT_SUB_WAY_FIRE_ALARM         0x3201      // the fire alarm of subway(Corresponding to ALARM_SUB_WAY_FIRE_ALARM_INFO)
#define EVENT_SUB_WAY_EMER_HANDLE        0x3202      // the emer handle state(Corresponding to ALARM_SUB_WAY_EMER_HANDLE_INFO)
#define EVENT_SUB_WAY_CAB_COVER          0x3203      // the cab cover state(Corresponding to ALARM_SUB_WAY_CAB_COVER_INFO)
#define EVENT_SUB_WAY_DERA_OBST          0x3204      // the dera or obst of subway(Corresponding to ALARM_SUB_WAY_DERA_OBST_INFO)
#define EVENT_SUB_WAY_PECU_CALL          0x3205      // the PECU call state(Corresponding to ALARM_SUB_WAY_PECU_CALL_INFO)
#define EVENT_BOX                        0x3206      // the Alarm Box(Corresponding to ALARM_BOX_INFO)
#define EVENT_DOOR_CLOSEDMANUALLY        0x3207      // door closed manually(Corresponding to  ALARM_DOOR_CLOSEDMANUALLY_INFO)
#define EVENT_DOOR_NOTCLOSED_LONGTIME    0x3208      // door not closed long time(Corresponding to ALARM_DOOR_NOTCLOSED_LONGTIME_INFO)
#define EVENT_UNDER_VOLTAGE              0x3209      // the under voltage alarm ( Corresponding to ALARM_UNDER_VOLTAGE_INFO )
#define EVENT_OVER_VOLTAGE               0x320a      // the over voltage alarm  ( Corresponding to ALARM_OVER_VOLTAGE_INFO )
#define EVENT_CUT_LINE                   0x320b      // the cut line alarm(Corresponding to ALARM_CUT_LINE_INFO)
#define EVENT_VIDEOMOTION_EVENT          0x320c      // video motion event(Corresponding to ALARM_VIDEOMOTION_EVENT_INFO)
#define EVENT_WIDE_VIEW_REGION_EVENT     0x320d      // WideViewRegions event(Corresponding to ALARM_WIDE_VIEW_REGION_EVENT_INFO)
#define EVENT_FIBRE_OPTIC_ABORT          0x320e      // the fibre optic abort alarm(Corresponding to ALARM_FIBRE_OPTIC_ABORT)
#define EVENT_TAIL_DETECTION             0x320f      // tail detection(Corresponding ALARM_TAIL_DETECTION_INFO)
#define EVENT_BITRATES_OVERLIMIT         0x3210      // alarm when camera bitrate is over channel decoding specification(Corresponding to ALARM_BITRATES_OVERLIMIT_INFO)
#define EVENT_RECORD_CHANGED_EX          0x3211      // Record state changed alarm(Corresponding to ALARM_RECORD_CHANGED_INFO_EX)
#define EVENT_HIGH_DECIBEL               0x3212      // High decibel alarm(Corresponding to ALARM_HIGH_DECIBEL_INFO)
#define EVENT_SHAKE_DETECTION            0x3213      // Shake detection alarm(Corresponding to ALARM_SHAKE_DETECTION_INFO)
#define EVENT_TUMBLE_DETECTION           0x3214      // tumble detection alarm(Corresponding to ALARM_TUMBLE_DETECTION_INFO)
#define EVENT_ACCESS_CTL_MALICIOUS       0x3215      // Open door with malice(Corresponding to ALARM_ACCESS_CTL_MALICIOUS)
#define EVENT_ACCESS_CTL_USERID_REGISTER 0x3216      // UserID Register(Corresponding to ALARM_ACCESS_CTL_USERID_REGISTER)
#define EVENT_ACCESS_CTL_REVERSELOCK     0x3217      // ReverseLock alarm(Corresponding to ALARM_ACCESS_CTL_REVERSELOCK)
#define EVENT_ACCESS_CTL_USERID_DELETE   0x3218      // UserID delete(Corresponding to ALARM_ACCESS_CTL_USERID_DELETE)
#define EVENT_ACCESS_DOOR_BELL           0x3219      // Door bell (Corresponding to ALARM_ACCESS_DOOR_BELL_INFO)
#define EVENT_ACCESS_FACTORY_RESET       0x321a      // Wireless Dev Facroty Reset (Corresponding to ALARM_ACCESS_FACTORY_RESET_INFO)
#define EVENT_POLICE_RECORD_PROGRESS     0x321b        // MPT record file transfer progress(Corresponding to ALARM_POLICE_RECORD_PROGRESS_INFO)
#define EVENT_POLICE_PLUGIN              0x321c        // MPT plugin in or out event(Corresponding to ALARM_POLICE_PLUGIN_INFO)
#define EVENT_GPS_NOT_ALIGNED            0x321d        // GPS not aligned alarm (Corresponding to ALARM_GPS_NOT_ALIGNED_INFO)
#define EVENT_WIRELESS_NOT_CONNECTED     0x321e        // WireLess(include wifi, 3G/4G) not connected alarm (Corresponding to ALARM_WIRELESS_NOT_CONNECTED_INFO)
#define EVENT_CABINET                    0x321f        // Cloud Cabinet event(Corresponding to ALARM_CABINET_INFO)
#define DH_SWITCH_SCREEN                    0x3220        // Switch screen event.
#define EVENT_NEAR_DISTANCE_DETECTION    0x3221        // alarm of near distance detection (Corresponding to ALARM_NEAR_DISTANCE_INFO)
#define EVENT_MAN_STAND_DETECTION        0x3222        // alarm of stereo standing (Corresponding to ALARM_MAN_STAND_INFO)
#define EVENT_MAN_NUM_DETECTION          0x3223        // alarm of regional population statistics  (Corresponding to ALARM_MAN_NUM_INFO)
#define DH_MCS_GENERAL_CAPACITY_LOW         0x3224        // MCS general capacity low event(Corresponding to ALARM_MCS_GENERAL_CAPACITY_LOW_INFO)
#define DH_MCS_DATA_NODE_OFFLINE            0x3225        // MCS data node offline event(Corresponding to ALARM_MCS_DATA_NODE_OFFLINE_INFO)
#define DH_MCS_DISK_OFFLINE                 0x3226        // MCS disk offline event(Corresponding to ALARM_MCS_DISK_OFFLINE_INFO)
#define DH_MCS_DISK_SLOW                    0x3227        // MCS disk slow event(Corresponding to ALARM_MCS_DISK_SLOW_INFO)
#define DH_MCS_DISK_BROKEN                  0x3228        // MCS disk broken event(Corresponding to ALARM_MCS_DISK_BROKEN_INFO)
#define DH_MCS_DISK_UNKNOW_ERROR            0x3229        // MCS disk unknown error event(Corresponding to ALARM_MCS_DISK_UNKNOW_ERROR_INFO)
#define DH_MCS_METADATA_SERVER_ABNORMAL     0x322a        // MCS metadata server abnormal event(Corresponding to ALARM_MCS_METADATA_SERVER_ABNORMAL_INFO)
#define DH_MCS_CATALOG_SERVER_ABNORMAL      0x322b        // MCS catalog server abnormal event(Corresponding to ALARM_MCS_CATALOG_SERVER_ABNORMAL_INFO)
#define DH_MCS_GENERAL_CAPACITY_RESUME      0x322c        // MCS general capacity resume event(Corresponding to ALARM_MCS_GENERAL_CAPACITY_RESUME_INFO)
#define DH_MCS_DATA_NODE_ONLINE             0x322d        // MCS data node online event(Corresponding to ALARM_MCS_DATA_NODE_ONLINE_INFO)
#define DH_MCS_DISK_ONLINE                  0x322e        // MCS disk online event(Corresponding to ALARM_MCS_DISK_ONLINE_INFO)
#define DH_MCS_METADATA_SLAVE_ONLINE        0x322f        // MCS metadata slave online event(Corresponding to ALARM_MCS_METADATA_SLAVE_ONLINE_INFO)
#define DH_MCS_CATALOG_SERVER_ONLINE        0x3230        // MCS catalog server online event(Corresponding to ALARM_MCS_CATALOG_SERVER_ONLINE_INFO)
#define EVENT_OFFLINE_LOGSYNC            0x3231        // alarm of off Line logsync(Corresponding to ALARM_OFFLINE_LOGSYNC_INFO)
#define EVENT_UPGRADE_STATE              0x3232        // event of device upgrade(Corresponding to ALARM_UPGRADE_STATE)
#define EVENT_LABELINFO                  0x3233        // IPC added new(2017.4),RFID tag information acquisition event (Corresponding to DH_ALARM_LABELINFO)
#define EVENT_TIRED_PHYSIOLOGICAL        0x3234        // alarm of Tired Physiological(Corresponding to ALARM_TIRED_PHYSIOLOGICAL)
#define EVENT_CALLING_WHEN_DRIVING       0x3235        // alarm of Calling When Driving(Corresponding to ALARM_CALLING_WHEN_DRIVING)
#define EVENT_TRAFFIC_DRIVER_SMOKING     0x3236        // alarm of Traffic Driver Smoking(Corresponding to ALARM_TRAFFIC_DRIVER_SMOKING)
#define EVENT_TRAFFIC_DRIVER_LOWER_HEAD  0x3237        // alarm of Traffic Driver Lower Head(Corresponding to ALARM_TRAFFIC_DRIVER_LOWER_HEAD)
#define EVENT_TRAFFIC_DRIVER_LOOK_AROUND 0x3238        // alarm of Traffic Driver Look Around(Corresponding to ALARM_TRAFFIC_DRIVER_LOOK_AROUND)
#define EVENT_TRAFFIC_DRIVER_LEAVE_POST  0x3239        // alarm of Traffic Driver Leave Post(Corresponding to ALARM_TRAFFIC_DRIVER_LEAVE_POST)
#define EVENT_TRAFFIC_DRIVER_YAWN        0x323a        // alarm of Traffic Driver Yawn(Corresponding to ALARM_TRAFFIC_DRIVER_YAWN)
#define EVENT_AUTO_INSPECTION            0x323b        // Device auto inspection(Corresponding to ALARM_AUTO_INSPECTION) 
#define EVENT_TRAFFIC_VEHICLE_POSITION   0x323c        // Vehicle Position Event(Corresponding to ALARM_TRAFFIC_VEHICLE_POSITION)
#define EVENT_FACE_VERIFICATION_ACCESS_SNAP     0x323d // alarm of face verification access snap(Corresponding to ALARM_FACE_VERIFICATION_ACCESS_SNAP_INFO)
#define EVENT_VIDEOBLIND                 0x323e        // alarm of video blind(Corresponding to ALARM_VIDEO_BLIND_INFO)
#define EVENT_DRIVER_NOTCONFIRM          0x323f        // alarm of driver not confirm(Corresponding to ALARM_DRIVER_NOTCONFIRM_INFO)
#define EVENT_FACEINFO_COLLECT           0x3240        // alarm of face info collect(Corresponding to ALARM_FACEINFO_COLLECT_INFO)
#define EVENT_HIGH_SPEED				  	0x3241			// alarm of high speed(Corresponding to ALARM_HIGH_SPEED_INFO)
#define EVENT_VIDEO_LOSS					0x3242			// alarm of video loss(Corresponding to ALARM_VIDEO_LOSS_INFO)
#define EVENT_MPTBASE_CONNECT            0x3243          // alarm of the connection status between device ant base(Corresponding to ALARM_MPTBASE_CONNECT) 
#define EVENT_LATEST_SHUTDOWN            0x3244          // alarm of the latest status of shut down (Corresponding to ALARM_LATEST_SHUTDOWN)

#define EVENT_ROBOT_COLLISION	        0x3245			// alarm of robot collision(Corresponding to ALARM_ROBOT_COLLISION)
#define EVENT_ROBOT_FALLENDOWN		    0x3246			// alarm of robot fallendown(Corresponding to ALARM_ROBOT_FALLENDOWN)
#define EVENT_ROBOT_UNRECOGNIZED2DCODE   0x3247			// alarm of robot unrecognized 2DCODE(Corresponding to ALARM_ROBOT_UNRECOGNIZED2DCODE) 
#define EVENT_ROBOT_WRONG2DCODE	        0x3248			// alarm of wrong 2DCODE(Corresponding to ALARM_ROBOT_WRONG2DCODE)
#define EVENT_ROBOT_ROADBLOCKED	        0x3249		    // alarm of robot roadblocked(Corresponding to ALARM_ROBOT_ROADBLOCKED) 
#define EVENT_ROBOT_FAULT				0x324a			// alarm of robot fault(Corresponding to ALARM_ROBOT_FAULT)
#define EVENT_ROBOT_OVERLOAD			    0x324b			// alarm of robot overload(Corresponding to ALARM_ROBOT_OVERLOAD)
#define EVENT_ROBOT_YAWEXCEPTION		    0x324c			// alarm of robot yawexception(Corresponding to ALARM_ROBOT_YAWEXCEPTION)


#define EVENT_ROBOT_LOADTIMEOUT		    0x324e			// alarm of robot LoadTimeout(Corresponding to ALARM_ROBOT_LOADTIMEOUT)
#define EVENT_ROBOT_UNLOADTIMEOUT		0x324f			// alarm of robot UnLoadTimeout(Corresponding to ALARM_ROBOT_UNLOADTIMEOUT)
#define EVENT_ROBOT_MAPUPDATE	    	0x3250			// alarm of robot MapUpdate(Corresponding to ALARM_ROBOT_MAPUPDATE)
#define	DH_ALARM_ROBOT_BRAKE				0x3252			// alarm of robot brake(Corresponding to ALARM_ROBOT_BRAKE)
#define	DH_ALARM_ROBOT_MANUAL_INTERVENTION	0x3253			// alarm of robot manual intervention(Corresponding to ALARM_ROBOT_MANUAL_INTERVENTION)
// -----------------------------------------------


#define EVENT_VIDEO_TALK_PATH		    0x324d			// alarm of the video talk path(Corresponding to ALARM_VIDEO_TALK_PATH_INFO)
#define EVENT_CGIRECORD                  0x3251          // cgi triggered manual video recording(Corresponding to ALARM_CGIRECORD)
#define EVENT_BATTERY_TEMPERATURE	    0x3254			// alarm of battery temperature(corresponding to ALARM_BATTERY_TEMPERATURE_INFO)
#define EVENT_TIRE_PRESSURE	            0x3255			// alarm of tire pressure(corresponding to ALARM_TIRE_PRESSURE_INFO )
#define EVENT_VTH_CONFLICT				0x3256			// alarm of VTH Conflict(corresponding to ALARM_VTH_CONFLICT_INFO)
#define EVENT_ACCESS_CTL_BLACKLIST       0x3257          // alarm of access event form blacklist(corresponding to ALARM_ACCESS_CTL_BLACKLIST)
#define EVENT_ROBOT_EMERGENCY_STOP		0x3258			// alarm of robot emergency stop(corresponding to ALARM_ROBOT_EMERFEBCY_STOP)
#define	DH_ALARM_ROBOT_PATH_PLAN_FAILED		0x3259			// alarm of robot path plan failed(corresponding to ALARM_ROBOT_PATH_PLAN_FAILED)
#define EVENT_ROBOT_LOCAL_MAP_UPLOAD		0x325a			// alarm of robot local map upload(corresponding to ALARM_ROBOT_LOCAL_MAP_UPLOAD)
#define	DH_ALARM_ROBOT_SHELF_ERROR	        0x325b			// alarm of robot shelf error(corresponding to ALARM_ROBOT_SHELF_ERROR)
#define	DH_ALARM_ROBOT_SENSOR_ERROR	        0x325c			// alarm of robot sensor error(corresponding to ALARM_ROBOT_SENSOR_ERROR)
#define EVENT_ROBOT_DERAILMENT           0x325d          // alarm of robot derailment(corresponding to ALARM_ROBOT_DERAILMENT)
#define EVENT_ROBOT_MOTOR_UNINIT         0x325e          // alarm of robot motor lock the gate(corresponding to ALARM_ROBOT_MOTOR_UNINIT)
#define EVENT_ROBOT_PREVENT_FALLING      0x325f          // alarm of Robot prevent falling(corresponding to ALARM_ROBOT_PREVENT_FALLING)
#define EVENT_ROBOT_LOCATION_EXCEPTION   0x3260			// alarm of robot location exception(Corresponding to ALARM_ROBOT_LOCATION_EXCEPTION )
#define EVENT_ROBOT_UPGRADER_FAIL        0x3261          // alarm of Robot upgrader fail(corresponding to ALARM_ROBOT_UPGRADER_FAIL)
#define EVENT_ROBOT_CHARGING_ERROR       0x3262          // alarm of robot charging error(Corresponding to ALARM_ROBOT_CHARGING_ERROR)
#define EVENT_ROBOT_STATIONCHARGING_ERROR       0x3263   // alarm of robot station charging error(Corresponding to ALARM_ROBOT_STATIONCHARGING_ERROR)
#define EVENT_ROBOT_CAMERA_ABNORMAL      0x3264          // alarm of robot camera abnormal(Corresponding to ALARM_ROBOT_CAMERA_ABNORMAL)
#define EVENT_ROBOT_ERROR_REPORT         0x3265          // alarm of robot error report(Corresponding to ALARM_ROBOT_ERROR_REPORT)
#define EVENT_ROBOT_DOOR_CONTROL_REQUEST 0x3266			// alarm of robot door control request(Corresponding to ALARM_ROBOT_DOOR_CONTROL_REQUEST_INFO)
#define EVENT_ROBOT_FAILEDTO_CONTROLROOM 0x3267          // alarm of robot failed to open charging room door(Corresponding to ALARM_ROBOT_FAILEDTO_CONTROLROOM)
#define	DH_ALARM_ROBOT_ABNORMAL2DCODE	    0x3268			// alarm of robot abnormal 2Dcode(Corresponding to ALARM_ROBOT_ABNORMAL2DCODE)
#define	DH_ALARM_ROBOT_SECURITYDOGINVALID	0x3269			// alarm of robot security dog invalid(Corresponding to ALARM_ROBOT_SECURITYDOGINVALID)
#define	DH_ALARM_ROBOT_LOCKAREA_BLOCKED  	0x326a			// alarm of robot lock area blocked(Corresponding to ALARM_ROBOT_LOCKAREA_BLOCKED)
#define	DH_ALARM_ROBOT_REQUEST_CANCLE_TASK  0x326b			// alarm of robot cancle the platform task(Corresponding to ALARM_ROBOT_REQUEST_CANCLE_TASK)
#define	DH_ALARM_ROBOT_FORK_BLOCK	        0x326c			// alarm of robot fork block(Corresponding to ALARM_ROBOT_FORK_BLOCK)
#define	DH_ALARM_ROBOT_SHUT_DOWN	        0x326d			// alarm of robot shut down(Corresponding to ALARM_ROBOT_SHUT_DOWN)
#define	DH_ALARM_ROBOT_LASER_HEAD_DIRTY	    0x326e			// alarm of robot laser head dirty(Corresponding to ALARM_ROBOT_LASER_HEAD_DIRTY)
#define	DH_ALARM_ROBOT_UNTRACK	            0x326f			// alarm of robot untrack(Corresponding to ALARM_ROBOT_UNTRACK)
#define	DH_ALARM_ROBOT_IN_ELEVATOR	        0x3270			// alarm of robot in elevator(Corresponding to ALARM_ROBOT_IN_ELEVATOR)
#define	DH_ALARM_ROBOT_CORRECT_LOACATION	0x3271			// alarm of robot correct location(Corresponding to ALARM_ROBOT_CORRECT_LOACATION)
#define	DH_ALARM_ROBOT_SLIP	                0x3272			// alarm of robot slip (Corresponding to ALARM_ROBOT_SLIP)
#define EVENT_ROBOT_LOAD_HEIGHT_ALARM    0x3273          // alarm of robot cargo superelevation(Corresponding to ALARM_ROBOT_LOAD_HEIGHT_ALARM)
#define EVENT_ROBOT_EMERGENCY_STOP_EX    0x3274          // alarm of robot emergency stop ex(Corresponding to  ALARM_ROBOT_EMERGENCY_STOP_EX)

#define EVENT_USERLOCK					0x3300			// alarm of user lock(corresponding to ALARM_USERLOCK_INFO)
#define EVENT_DOWNLOAD_REMOTE_FILE		0x3301			// alarm of download remote file(corresponding to ALARM_DOWNLOAD_REMOTE_FILE_INFO)
#define EVENT_NASFILE_STATUS             0x3302          // alarm of NAS file status (Corresponding to ALARM_NASFILE_STATUS_INFO)
#define EVENT_TALKING_CANCELCALL         0x3303          // alarm of Cancel talking call(Corresponding to ALARM_TALKING_CANCELCALL_INFO)
#define EVENT_ACCESS_CTL_UNAUTHORIZED_MALICIOUSWIP      0x3304 // alarm of unauthorized maliciouswip(Corresponding to ALARM_ACCESS_CTL_UNAUTHORIZED_MALICIOUSWIP) 
#define EVENT_CROWD_DETECTION			0x3305			// alarm of crowd detection(Corresponding to ALARM_CROWD_DETECTION_INFO)
#define EVENT_FACE_FEATURE_ABSTRACT		0x3306			// alarm of face feature abstract(Corresponding to ALARM_FACE_FEATURE_ABSTRACT_INFO)
#define	DH_ALARM_RECORD_SCHEDULE_CHANGE		0x3307			// alarm of record schedule change (Corresponding to ALARM_RECORD_SCHEDULE_CHANGE_INFO)
#define EVENT_NTP_CHANGE					0x3308			// alarm of NTP change (Corresponding to ALARM_NTP_CHANGE_INFO)
#define EVENT_HDD_TEMPERATUREALARM		0x3309			// alarm of HDD Temperature Alarm(Corresponding to ALARM_HDD_TEMPERATUREALARM_INFO)
#define EVENT_HDD_HEALTHALARM			0x330a			// alarm of HDD Health Alarm(Corresponding to ALARM_HDD_HEALTHALARM_INFO)
#define EVENT_HDD_SHAKEALARM     		0x330b			// alarm of HDD Shake Alarm(Corresponding to ALARM_HDD_SHAKEALARM_INFO)
#define EVENT_PATROL_STATUS				0x330c			// alarm of Patrol Status Alarm(Corresponding to ALARM_PATROL_STATUS_INFO) 
#define EVENT_CITIZEN_PICTURE_COMPARE    0x330d          // citizen picture compare(Corresponding to ALARM_CITIZEN_PICTURE_COMPARE_INFO)

/*  start  reserved 58 events*/
#define EVENT_AREAARM_MODECHANGE         0x330e          // alarm of area arm mode change(Corresponding to ALARM_AREAARM_MODECHANGE_INFO)
#define EVENT_ZONEMODULELOST             0x330f          // alarm of zone module lost(Corresponding to ALARM_ZONEMODULE_LOST_INFO)
#define EVENT_AREAALARM                  0x3310          // alarm of area alarm(Corresponding to ALARM_AREAALARM_INFO)
#define EVENT_ZONEOPEN                   0x3311          // alarm of zone open(Corresponding to ALARM_ZONEOPEN_INFO)
#define EVENT_SYSTEMTAMPER               0x3312          // alarm of system tamper(Corresponding to ALARM_SYSTEMTAMPER_INFO)
#define EVENT_ALARMREGION_MAXEVENTID     0x3348          // Maximum of new event, useless
/*  end	   reserved 58 events*/

#define EVENT_LAW_ENFORCEMENT_INFO		0x3349			// alarm of Law EnforcementInfo (corresponding to ALARM_LAW_ENFORCEMENT_INFO)
#define EVENT_CONGESTION_DETECTION		0x334A			// alarm of congestion detection(Corresponding to ALARM_CONGESTION_DETECTION_INFO)
#define EVENT_VEHICLELIMIT_DETECTION		0x334B			// alarm of vehicle limit detection(Corresponding to ALARM_VEHICLELIMIT_DETECTION_INFO)
#define EVENT_TRAFFIC_PARKING_TIMEOUT	0x334C			// alarm of parking timeout(Corresponding to ALARM_TRAFFIC_PARKING_TIMEOUT_INFO)

#define EVENT_DISTANCE_DETECTION			0x334e			// alarm of distance detection(Corresponding to ALARM_DISTANCE_DETECTION_INFO)
#define EVENT_STAY_DETECTION				0x334f			// alarm of stay detection(Corresponding to ALARM_STAY_DETECTION_INFO)
#define EVENT_DEVBOARDHOTPLUG			0x3350			// alarm of board hot plug(Corresponding to ALARM_DEVBOARDHOTPLUG_INFO)
#define EVENT_HOMESCENE_CHANGE			0x3351			// alarm of scene change(Corresponding to ALARM_HOMESCENE_CHANGE_INFO)
#define EVENT_STORAGE_WORKDIRECTORY_SWITCH 0x3352        // alarm of storage work directory switch(Corresponding to ALARM_STORAGE_WORKDIRECTORY_SWITCH_INFO)
#define EVENT_TRAFFIC_LINKAGEALARM		0x3353			// alarm of linkage alarm(Corresponding to ALARM_TRAFFIC_LINKAGEALARM_INFO)
#define EVENT_COAXIAL_ALARM_LOCAL		0x3354			// alarm of coaxial alarm local(Corresponding to ALARM_COAXIAL_ALARM_LOCAL_INFO)
#define EVENT_NAS_FILE_REMOVE_STATUS	    0x3355			// alarm of NAS File Remove Status(Corresponding to ALARM_NAS_FILE_REMOVE_STATUS_INFO)
#define EVENT_NAS_APK_INSTALL_REQUEST    0x3356			// alarm of NAS APK Install Request(Corresponding to ALARM_NAS_APK_INSTALL_REQUEST_INFO)
#define EVENT_NAS_APK_INSTALL_STATUS	    0x3357			// alarm of NAS APK Install Status(Corresponding to ALARM__APK_INSTALL_STATUS_INFO)
#define EVENT_FILE_COMPRESS_STATUS	    0x3358			// alarm of File Compress Status(Corresponding to ALARM_FILE_COMPRESSS_STATUS_INFO)
#define EVENT_STRANGER_ALARM				0x3359			// alarm of stranger alarm(Corresponding to ALARM_STRANGER_ALARM_INFO)
#define EVENT_QR_CODE_CHECK              0x335a          // alarm of QR code check(Corresponding to ALARM_QR_CODE_CHECK_INFO)
#define EVENT_ACCESS_CTL_LOCK_MODE       0x335b          // alarm of door lock mode(Corresponding to ALARM_ACCESS_CTL_LOCK_MODE_INFO)
#define EVENT_LOCK_ROOM_NUM_BIND         0x335c          // alarm of room number binding(Corresponding to ALARM_LOCK_ROOM_NUM_BIND_INFO)
#define EVENT_LEAVE_DETECTION			0x335d		    // alarm of leave detection(Corresponding to ALARM_LEAVE_DETECTION_INFO)
#define EVENT_TRAFFICGZJJ_QUEUE_LEN		0x335e		    // alarm of Traffic guangzhoujiaotong queue len(Corresponding to ALARM_TRAFFICGZJJ_QUEUE_LEN_INFO)
#define EVENT_TRAFFIC_XINKONG			0x335f		    // alarm of TrafficXinKong(Corresponding to ALARM_TRAFFIC_XINKONG_INFO)
#define EVENT_DEVICE_ABNORMAL			0x3360			// alarm of Device abnormal (Corresponding to ALARM_DEVICE_ABNORMAL_INFO )

/*  start  radar adaptor event,reserved 64 events*/
#define EVENT_RADAR_REGIONDETECTION		0x3370			// alarm of radar region detection(Corresponding to ALARM_RADAR_REGIONDETECTION_INFO)
#define EVENT_RADAR_LINEDETECTION        0x3371          // Radar cordon/trip line detection event(Corresponding to ALARM_RADAR_LINEDETECTION_INFO)
#define EVENT_RADAR_MAXEVENTID		    0x3433			// Maximum of new event, useless
/*  end  radar adaptor event,reserved 64 events*/

#define EVENT_JABLOTRON_ALARM			0x3434			// alarm of Jablotron alarm(Corresponding to ALARM_JABLOTRONALARM_INFO)
#define EVENT_FACE_RECOGNITION           0x3435          // alarm of face recognition(Corresponding to ALARM_FACE_RECOGNITION_INFO) 
#define EVENT_VEHICLE_OILLEVEL           0x3436          // alarm of vehicle oil level(Corresponding to ALARM_VEHICLE_OILLEVEL_INFO) 
#define EVENT_VEHICLE_LOAD				0x3437          // alarm of vehicle load(Corresponding to ALARM_VEHICLE_LOAD_INFO) 
#define EVENT_VEHICLE_STATE				0x3438          // alarm of vehicle state(Corresponding to ALARM_VEHICLE_STATE_INFO) 
#define EVENT_IMSI_CHECK					0x3439          // alarm of IMSI check(Corresponding to ALARM_IMSI_CHECK_INFO) 
#define EVENT_BLIND_ALARM				0x343A          // alarm of vehicle into blind area(Corresponding to ALARM_BLIND_ALARM_INFO) 
#define EVENT_VEHICLE_MAINTAINCE			0x343B          // alarm of vehicle maintaince(Corresponding to ALARM_VEHICLE_MAINTAINCE_INFO) 
#define EVENT_PARKINGLOCK_STATE			0x343C          // alarm of parkinglock state(Corresponding to ALARM_PARKINGLOCK_STATE_INFO) 
#define EVENT_FIRE_DETECTION				0x343D			// alarm of fire detection (Corresponding to ALARM_FIRE_DETECTION_INFO)
#define EVENT_NAS_SERVER_STATE			0x343E			// alarm of NAS server state(Corresponding to ALARM_NAS_SERVER_STATE_INFO)
#define EVENT_VOLUME_GROUP_FAULT			0x343F			// alarm of volume group fault(Corresponding to ALARM_VOLUME_GROUP_FAULT_INFO)
#define EVENT_DISK_CHECK					0x3440			// alarm of disk check(Corresponding to ALARM_DISK_CHECK_INFO)
#define EVENT_PHONECALL_DETECT			0x3441			// alarm of phone call detect (Corresponding to ALARM_PHONECALL_DETECT_INFO)
#define EVENT_FLOATINGOBJECT_DETECTION   0x3442			// alarm of flotage detection(Corresponding to ALARM_FLOATINGOBJECT_DETECTION_INFO)
#define EVENT_WATER_LEVEL_DETECTION		0x3443			// alarm of water level detection(Corresponding to ALARM_WATER_LEVEL_DETECTION_INFO)
#define EVENT_LOW_SPEED					0x3444		    // alarm of Low Speed alarm(corresponding to ALARM_LOW_SPEED_INFO)
#define EVENT_TRAFFIC_VEHICLEINOUT		0x3445		    // alarm of vehicle enter or leave lane(corresponding to ALARM_TRAFFIC_VEHICLEINOUT_INFO)
#define EVENT_TRAFFIC_JUNCTION			0x3446			// alarm of traffic junction(corresponding to ALARM_TAFFIC_JUNCTION_INFO)
#define EVENT_DOOR_CONTROL				0x3447			// alarm of door control(corresponding to ALARM_DOOR_CONTROL_INFO)
#define EVENT_ARMSTATE					0x3448			// alarm of arm state (corresponding to ALARM_ARMSTATE_INFO)
#define EVENT_TICKET_INFO_REPORT			0x3449			// alarm of ticket info report(Corresponding to ALARM_TICKET_INFO_REPORT)
#define EVENT_TRAFFIC_LAMP_WORK_STATE    0x344E          // alarm of traffic lamp work state(Corresponding to ALARM_TRAFFIC_LAMP_WORK_STATE_INFO)
#define EVENT_ENGINE_FAILURE_STATUS		0x344F			// alarm of engine failure status(Corresponding to ALARM_ENGINE_FAILURE_STATUS_INFO)
#define EVENT_HIGH_TOSS_DETECT           0x3450          // alarm of high toss detection(Corresponding to ALARM_HIGH_TOSS_DETECT_INFO)
#define EVENT_PARKING_LOT_STATUS_DETECTION   0X3451      // alarm of parking lot status dection(Corresponding to ALARM_PARKING_LOT_STATUS_DETECTION)
#define EVENT_STORAGE_HEALTH_ABNORMAL    0x3452          // alarm of storage health abnormal(Corresponding to ALARM_STORAGE_HEALTH_ABNORMAL_INFO)
#define EVENT_CLEAR_CAR					0x3453          // alarm of clear car(Corresponding to ALARM_CLEAR_CAR_INFO)

#define	DH_ALARM_ANATOMY_TEMP_DETECT		0x3454			// alarm of Intelligent detection of human body temperature(corresponding to  ALARM_ANATOMY_TEMP_DETECT_INFO)
#define EVENT_REGULATOR_ABNORMAL			0x3455			// alarm of Standard blackbody source exception(corresponding to  ALARM_REGULATOR_ABNORMAL_INFO)
#define EVENT_DHOP_CUSTOM				0x3456			// alarm of DHOP custom(start/stop, corresponding to ALARM_DHOP_CUSTOM_INFO)
#define EVENT_DHOP_CUSTOM_ONCE			0x3457			// alarm of DHOP custom once(pulse, corresponding to ALARM_DHOP_CUSTOM_INFO)
#define EVENT_TRAFFIC_LIGHT_STATE		0x3458			// alarm of traffic light state(corresponding to ALARM_TRAFFIC_LIGHT_STATE_INFO)
#define EVENT_SWIPCARD_STATUS			0x3459			// alarm of swipe card status(corresponding to ALARM_SWIPCARD_STATUS_INFO)
#define EVENT_AUDIOHOST_STATE			0x345A			// alarm of audiohost state(corresponding to ALARM_AUDIOHOST_STATE_INFO)
#define EVENT_PTZ_ABNORMAL				0x345B			// alarm of ptz abnormal(corresponding to ALARM_PTZ_ABNORMAL_INFO)
#define EVENT_STORAGEFORMAT              0x345C          // alarm of storage format(corresponding to ALARM_STORAGEFORMAT_INFO)
#define EVENT_APPCMDSTATE                0x345D          // app event of transparent signaling to Dhop(corresponding to ALARM_APPCMDSTATE_INFO)
#define EVENT_BLUE_TOOTH_HEADSET_ALARM	0x345E			// Bluetooth headset "one-button alarm" event(corresponding to ALARM_BLUE_TOOTH_HEADSET_ALARM_INFO )
#define EVENT_SOLARCELL_SYSTEM_INFO		0x345F			// alarm of solarcell system ifo(corresponding to ALARM_SOLARCELL_SYSTEM_INFO)
#define EVENT_REGION_PARKING_TIMEOUT		0x3460			// alarm of region parking timeout(corresponding to ALARM_REGION_PARKING_TIMEOUT_INFO)
#define EVENT_REGION_PARKING_NO_ENTRY_RECORD 0x3461		// alarm of region parking no entry record(corresponding to ALARM_REGION_PARKING_NO_ENTRY_RECORD_INFO)
#define EVENT_OVER_LOAD					0x3462			// alarm of over load(corresponding to ALARM_OVER_LOAD_INFO)
#define EVENT_WIRELESS_LOG_INFO			0x3463			// alarm of Intelligent gateway log or binary data(corresponding to ALARM_WIRELESS_LOG_INFO)
#define EVENT_TIME_TO_POWEROFF           0x3464          // alarm of the battery camera reaches the upper limit of the streaming preview time and shutdown (corresponding to ALARM_TIME_TO_POWEROFF_INFO)
#define EVENT_TRAFFIC_LIGHT_FAULT_STATE	0x3465			// alarm of Traffic light failure alarm event(corresponding to ALARM_TRAFFIC_LIGHT_FAULT_INFO)
#define EVENT_VEHICLE_PERIPHERAL         0x3466          // alarm of vehicle peripheral (corresponding to ALARM_VEHICLE_PERIPHERAL_INFO )
#define EVENT_FIRE_LANE_DETECTION		0x3467			// alarm of Fire lane detection event(corresponding to  ALARM_FIRE_LANE_DETECTION_INFO )
#define EVENT_FIRE_LINE_DETECTION		0x3468			// alarm of Fire line detection event (corresponding to ALARM_FIRE_LINE_DETECTION_INFO)
#define EVENT_DISK_HEALTH_FAILURE		0x3469			// alarm of Hard disk health exception event (corresponding to ALARM_DISK_HEALTH_FAILURE_INFO)
#define EVENT_VEHICLE_INOUT              0x346A          // alarm of vehicle entry or exit (corresponding to ALARM_VEHICLE_INOUT_INFO)
#define EVENT_REFRIGE_SHUT_DOWN			0x346B			// alarm of Prompt when the refrigerator enters the shutdown countdown(corresponding to  ALARM_REFRIGE_SHUT_DOWN_INFO)
#define EVENT_AROUD_4G_PROBE_SEARCH      0x346C          // alarm of aroud 4g probe search (corresponding to ALARM_AROUD_4G_PROBE_SEARCH_INFO )
#define EVENT_DISS_ASSEMBLY				0x3471			// Equipment body dismantling event (corresponding to ALARM_DISS_ASSEMBLY_INFO)// Alarm type of alarm upload function,corresponding to CLIENT_StartService.NEW_ALARM_UPLOAD structure.
#define EVENT_SLEEP_CONTROL_STATUS       0x3472          // Sleep control status (corresponding to ALARM_SLEEP_CONTROL_STATUS_INFO )
#define EVENT_REMOTE_DISASSEMBLY         0x3473          // alarm of remote device disassembly ( corresponding to ALARM_REMOTE_DISASSEMBLY_INFO )
#define EVENT_NONMOTOR_ENTRYING          0x3474          // Non motor vehicle entering elevator event(corresponding to ALARM_NONMOTOR_ENTRYING_INFO)
#define EVENT_SCREENSAVER				0x3475			// Zhinet product,screensaver event(corresponding to ALARM_SCREENSAVER_INFO)
#define EVENT_ABN_POST_DETECTION			0x3476			// The number of posts or abnormal events of personnel, IPC submitted for the first time (corresponding to ALARM_ABN_POST_DETECTION_INFO)
#define EVENT_CITY_MOTORPARKING			0x3477			// alarm of Urban motor vehicle parking incidents(corresponding to ALARM_CITY_MOTORPARKING_INFO)
#define EVENT_RECORD_BACKUP_FAILURE      0x3478          // alarm of record backup failure (Corresponding to ALARM_RECORD_BACKUP_FAILURE_INFO )
#define EVENT_EMERGENCY_FILE_UPLOAD      0x3479			// alarm of MPT device upload the specified file to the platform(Corresponding to ALARM_EMERGENCY_FILE_UPLOAD)
#define EVENT_COAXIAL_HIGH_TEMPERATURE	0x347A			// Over temperature alarm event(Corresponding to ALARM_COAXIAL_HIGH_TEMPERATURE_INFO)
#define EVENT_COAXIAL_LOW_TEMPERATURE	0x347B			// Loss of temperature alarm event(Corresponding to ALARM_COAXIAL_LOW_TEMPERATURE_INFO)
#define EVENT_BREED_DETECTION			0x347C			// breeding detection event(Corresponding to ALARM_BREED_DETECTION_INFO)
#define EVENT_CHANNEL_RECSHORTAGE    	0x347D			// Channel RecShortage event(Corresponding to ALARM_CHANNEL_RECSHORTAGE_INFO)
#define EVENT_EMERGENCY_FILE_UPLOAD_CANCEL 0x347E			// alarm of MPT device cancel upload the specified file to the platform(Corresponding to ALARM_EMERGENCY_FILE_UPLOAD_CANCEL_INFO)
#define EVENT_SECURITY_INSPECTOR_OVERTIME_ON_DUTY		0x347F			// Security Inspector OverTime On Duty event(Corresponding to ALARM_SECURITY_INSPECTOR_OVERTIME_ON_DUTY_INFO)
#define EVENT_SECURITY_INSPECTOR_NOT_CONFIRM_PACKAGE    	0x3480			// Security Inspector Not Confirm Package event(Corresponding to ALARM_SECURITY_INSPECTOR_NOT_CONFIRM_PACKAGE_INFO)
#define EVENT_WORKSUIT_FEATURE_ABSTRACT  0x3481          // Work Suit Feature Abstract result(Corresponding to ALARM_WORKSUIT_FEATURE_ABSTRACT_INFO)
#define EVENT_RUN_DETECTION	0x3482						// RunDetection (Corresponding to ALARM_RUN_DETECTION_INFO)
#define EVENT_ANATOMY_TEMPDETECT_TO_PHONE 0x3483			// anatomy tempertrue detect to phone (Corresponding to ALARM_ANATOMY_TEMPDETECT_TO_PHONE_INFO)

#define EVENT_CHANNEL_CAPS_CHANGE 0x3484					// Channel intelligence capability change event (corresponding to the structure ALARM_CHANNEL_CAPS_CHANGE_INFO)
#define EVENT_RAIN_FALL_MSG				 0x3485			// Rainfall data reporting event (Corresponding to ALARM_RAIN_FALL_MSG_INFO)
#define EVENT_VEHICLE_DETENTION			0x3486			//Lane stuck incident(Corresponding to ALARM_VEHICLE_DETENTION_INFO)
#define EVENT_ANIMAL_DETECTION			0x3487			// Animal detection event(Corresponding to ALARM_ANIMAL_DETECTION_INFO)
#define EVENT_ASG_SELFCHECK			    0x3488			// Gate self-check event (corresponding to the structure ALARM_ASG_SELFCHECK_INFO)
#define EVENT_GPS_REPORTING_PLATFORM     0x3489          // Alarm events reported by GPS platform (corresponding to the structure ALARM_GPS_REPORTING_PLATFORM)
#define EVENT_HOSPITAL_ALARM				0x348A			// Hospital Alarm (corresponding to the structure ALARM_HOSPITAL_ALARM_INFO)
#define EVENT_CUTLINE                    0x348B          // Alarm line cutting alarm event(corresponding to the structure ALARM_CUTLINE)
#define EVENT_VIDEOTALK                  0x348C          // Intercom recording event(corresponding to the structure ALARM_VIDEOTALK_INFO)
#define EVENT_PREVENT_FREE_RIDE          0x348D          // The bus system reports an abnormal ticket evasion alarm event(corresponding to the structure ALARM_PREVENT_FREE_RIDE_INFO)
#define EVENT_BLIND_SPOT_DETECTION		0x348E			// Blind Spot Detection Event(corresponding to  ALARM_BLIND_SPOT_DETECTION_INFO)
#define EVENT_WATER_SPEED_DETECTION		0x348F			// Water velocity detection event(corresponding to the structure ALARM_WATER_SPEED_DETECTION_INFO)
#define EVENT_HUMIDITY_ALARM             0x3490          // Humidity alarm event(corresponding to the structure ALARM_HUMIDITY_ALARM_INFO)
#define EVENT_SIP_REGISTER_RESULT        0x3491          // Register status event(corresponding to the structure ALARM_SIP_REGISTER_RESULT_INFO)
#define EVENT_GESTURE_DETECTION          0x3492          // Gesture detection event(corresponding to the structure ALARM_GESTURE_DETECTION_INFO)
#define EVENT_DEFENSE_CHANGE             0x3493          // Disarm and deploy troops for defence event(corresponding to the structure ALARM_DEFENSE_CHANGE_INFO)
#define EVENT_ABNORMAL_RESTART			0x3494			// abnormal restart(corresponding to the structure ALARM_ABNORMAL_RESTART_INFO)
#define EVENT_DOUBLEDOOR					0x3495			// Interlocking linkage AB door double open/double closed alarm (corresponding structure ALARM_DOUBLEDOOR_INFO)
#define EVENT_OPENOUT_TIMESECTION        0x3496			// Door opening alarm event outside the time period (corresponding to the structure ALARM_OPENOUT_TIMESECTION_INFO)
#define EVENT_SERVICESTART				0x3497			// Business status event (corresponding to the structure ALARM_SERVICESTART_INFO)
#define EVENT_WIRELESSDEV_POWERLESS      0x3498          // wireless device powerless event (corresponding to the structure ALARM_WIRELESSDEV_POWERLESS_INFO)
#define EVENT_PUBLISHINFO_CONFIRM        0x3499          // The indoor unit reporting platform notifies the event that the announcement has been read (corresponding to the structure ALARM_PUBLISHINFO_CONFIRM_INFO)
#define EVENT_LEFUNCTION_STATUS_SYNC     0x349A          // The app interface displays some specific state change events of the device (corresponding to ALARM_LEFUNCTION_STATUS_SYNC_INFO)
#define EVENT_WATER_QUALITY_DETECTION    0x349B          // Water quality test report event(corresponding to the structure ALARM_WATER_QUALITY_DETECTION_INFO)

#define EVENT_TRAFFIC_FLOW_QUEUE         0x349C          // Traffic intersection queuing event(corresponding to the structure ALARM_TRAFFIC_FLOW_QUEUE_INFO)
#define EVENT_TRAFFIC_FLOW_JUNTION       0x349D          // Traffic crossing events(corresponding to the structure ALARM_TRAFFIC_FLOW_JUNTION_INFO) 
#define EVENT_TRAFFIC_FLOW_VEHICLE_STOP  0x349E          // Traffic intersection parking event(corresponding to the structure ALARM_TRAFFIC_FLOW_VEHICLE_STOP_INFO) 
#define EVENT_TRAFFIC_FLOW_STAT          0x349F          // Statistical events of traffic intersection Lane(corresponding to the structure ALARM_TRAFFIC_FLOW_STAT_INFO)
#define EVENT_TRAFFIC_FLOW_STAT_EX       0x34A0          // Statistical development events of traffic intersection Lane(corresponding to the structure ALARM_TRAFFIC_FLOW_STAT_EX_INFO)
#define EVENT_SCREEN_DISPLAY_ALARM       0x34A1			// Display connection status change of device access(corresponding to the structure ALARM_SCREEN_DISPLAY_ALARM_INFO)
#define EVENT_YE_BAO_ALARM				0x34A2			// Ye Bao Alarm(corresponding to the structure ALARM_YE_BAO_ALARM_INFO)
#define EVENT_AI_PICKUP_WORK_STATE		0x34A3			// AI PickUp Work State Alarm(corresponding to ALARM_AI_PICKUP_WORK_STATE_INFO)
#define EVENT_INTELLI_TYPE_CHANGE		0x34A4			// Intelli Type Change Alarm(corresponding to ALARM_INTELLI_TYPE_CHANGE_INFO)
#define EVENT_TRAFFIC_CAR_PASSING		0x34A5			// Traffic Car Passing Alarm(corresponding to ALARM_TRAFFIC_CAR_PASSING_INFO)
#define EVENT_HUMAN_ANIMAL_COEXISTENCE	0x34A6			// Human Animal Coexistence Alarm(corresponding to ALARM_HUMAN_ANIMAL_COEXISTENCE_INFO)
#define EVENT_MINIINDOOR_RADAR_ALARM     0x34A7          // Mini Radar alarm event(corresponding to NET_ALARM_MINIINDOOR_RADAR_ALARM_INFO)
#define EVENT_MEMORY_OVER_LOAD			0x34A8			// High memory usage Alarm(corresponding to NET_ALARM_MEMORY_OVER_LOAD_INFO)
#define EVENT_CPU_OVER_LOAD				0x34A9			// High CPU usage Alarm(corresponding to NET_ALARM_CPU_OVER_LOAD_INFO)
#define EVENT_EAS_ANTITHEFT					0x34AA			// EAS anti theft alarm event(corresponding to NET_ALARM_EAS_ANTITHEFT	)
#define EVENT_EAS_TRANSMIT_COIL			0x34AB			// EAS transmitting coil fault event(corresponding to NET_ALARM_EAS_TRANSMIT_COIL)
#define EVENT_EAS_RECEIVE_COIL			0x34AC			// EAS receiving coil fault(corresponding to  NET_ALARM_EAS_RECEIVE_COIL)
#define EVENT_EAS_TAG_RESIDENT			0x34AD			// EAS tag resident alarm(corresponding to  NET_ALARM_EAS_TAG_RESIDENT)
#define EVENT_EAS_ANTENNA_POWER_FAULT		0x34AE //EAS antenna failure alarm event(corresponding to NET_ALARM_EAS_ANTENNA_POWER_FAULT)
#define EVENT_SAFETY_ABNORMAL			0x34AF			// Safety Abnormal alarm(corresponding to NET_ALARM_SAFETY_ABNORMAL_INFO)
#define EVENT_PARKING_SPACE_DETECTOR_STATE	0x34B0		// Parking Space Detector State alarm(corresponding to NET_ALARM_PARKING_SPACE_DETECTOR_STATE_INFO)
#define EVENT_REQUEST_IDLE_MODE			0x34B1			// Request to enter sleep mode event(corresponding to NET_ALARM_REQUEST_IDLE_MODE)
#define EVENT_FORCE_INTO_IDLE_MODE		0x34B2			// Forced sleep mode notification(corresponding to NET_ALARM_FORCE_INTO_IDLE_MODE)
#define EVENT_REMOTE_APPROVAL            0x34B3          // Financial remote approval event(corresponding to NET_ALARM_REMOTE_APPROVAL_INFO)
#define EVENT_DYNAMIC_PWDLOCK_FOR_INIT   0x34B4          // Initialization notification event initiated by dynamic password lock(corresponding to NET_ALARM_DYNAMIC_PWDLOCK_FOR_INIT_INFO)
#define EVENT_DYNAMIC_PWDLOCK_UPLOAD_RANDOMCODE 0x34B5   // Random code event reported by password lock(corresponding to NET_ALARM_DYNAMIC_LOCK_UPLOAD_RANDOMCODE_INFO)
#define EVENT_DYNAMIC_PWDLOCK_FOR_OPEN   0x34B6          // Notification event of password lock initiating unlocking process(corresponding to NET_ALARM_DYNAMIC_PWDLOCK_FOR_OPEN_INFO)
#define EVENT_DYNAMIC_PWDLOCK_CLOSE      0x34B7          // Password lock locking event(corresponding to NET_ALARM_DYNAMIC_PWDLOCK_CLOSE_INFO)
#define EVENT_SYNCUSER_INFO              0x34B8          // User information change notification event between active and standby computers(corresponding to NET_ALARM_SYNCUSER_INFO)
#define EVENT_GAS_TANK_DETECTION			0x34B9			// Gas tank detection event(corresponding to NET_ALARM_GAS_TANK_DETECTION_INFO)

#define EVENT_LOSS_FRAME_ALARM			0x34BA			// Loss Frame Alarm event(orresponding to NET_ALARM_LOSS_FRAME_ALARM_INFO)
#define EVENT_INTELLI_MODULE_HIGH_TEMP	0x34BB			// Intelli Module High Temp event(orresponding to NET_ALARM_INTELLI_MODULE_HIGH_TEMP_INFO)
#define EVENT_INTELLI_MODULE_OFFLINE		0x34BC			// Intelli Module Offline event(orresponding to NET_ALARM_INTELLI_MODULE_OFFLINE_INFO)
#define EVENT_SSD_HEALTH_FAILURE			0x34BD			// SSD Health Failure event(orresponding to NET_ALARM_SSD_HEALTH_FAILURE_INFO)
#define EVENT_ABNORMALLOGIN				0x34BE			// abnormal login event(corresponding to NET_ALARM_ABNORMALLOGIN_INFO)
#define EVENT_INTELLITRACK_EVENT			0x34BF			// PTZ information event(corresponding to NET_ALARM_INTELLITRACK_EVENT_INFO)

#define EVENT_RF_JAMMING					0x34C0			// RF interference event(corresponding to structure NET_ALARM_RF_JAMMING_INFO)
#define EVENT_ARMING_FAILURE				0x34C1			// Deployment failure event (corresponding to structure NET_ALARM_ARMING_FAILURE_INFO)
#define EVENT_USER_MODIFIED				0x34C2			// Event of user information being modified(added, deleted, modified)(corresponding to structure NET_ALARM_USER_MODIFIED_INFO)
#define EVENT_MANUAL_TEST				0x34C3			// Manual test events(corresponding to structure NET_ALARM_MANUAL_TEST_INFO)
#define EVENT_DEVICE_MODIFIED			0x34C4			// Event of modifying (adding, deleting, modifying) equipment settings(corresponding to structure NET_ALARM_DEVICE_MODIFIED_INFO)
#define EVENT_ATS_FAULT					0x34C5			// Alarm transmission system fault event(corresponding to structure NET_ALARM_ATS_FAULT_INFO)
#define EVENT_ARC_OFFLINE				0x34C6			// Alarm receiving center offline event(corresponding to structure NET_ALARM_ARC_OFFLINE_INFO)
#define EVENT_WIFI_FAILURE				0x34C7			// WiFi failure event(corresponding to structure NET_ALARM_WIFI_FAILURE_INFO)
#define EVENT_OVER_TEMPERATURE			0x34C8			// Overtemperature alarm event(corresponding to structure NET_ALARM_OVER_TEMPERATURE_INFO)
#define EVENT_TRAFFIC_ROADALERT			0x34C9			// traffic road alert event(corresponding to NET_ALARM_TRAFFIC_ROADALERT_INFO)
#define EVENT_TRAFFIC_CROSSLANE			0x34CA			// traffic cross lane event(corresponding to NET_ALARM_TRAFFIC_CROSSLANE_INFO)
#define EVENT_TRAFFIC_OVERYELLOWLINE		0x34CB			// traffic over yellow line event(corresponding to NET_ALARM_TRAFFIC_OVERYELLOWLINE_INFO)
#define EVENT_TRAFFIC_ACCIDENT			0x34CC			// traffic accident event(corresponding to NET_ALARM_TRAFFIC_ACCIDENT_INFO)
#define EVENT_TRAFFIC_ROADBLOCK			0x34CD			// traffic road block event(corresponding to NET_ALARM_TRAFFIC_ROADBLOCK_INFO)
#define EVENT_TRAFFIC_ROADCONSTRUCTION	0x34CE			// traffic road construction event(corresponding to NET_ALARM_TRAFFIC_ROADCONSTRUCTION_INFO)
#define EVENT_TRAFFIC_CARDISTANCESHORT	0x34CF			// traffic car distanceShort event(corresponding to NET_ALARM_TRAFFIC_CARDISTANCESHORT_INFO)

#define EVENT_TRAFFIC_VEHICLERACING		0x34D0			// traffic vehicle racing event(corresponding to NET_ALARM_TRAFFIC_VEHICLERACING_INFO)

// Semaphore event
#define EVENT_RTSC_PHASE_RUNING             0x5001      // RTSC running pause event (corresponding to ALARM_RTSC_PHASE_RUNNING_INFO)
#define EVENT_RTSC_LAMP_RUNING			   0x5002      // RTSC light pause event (corresponding to ALARM_RTSC_LAMP_RUNNING_INFO)
#define EVENT_RTSC_RUNING				   0x5003      // Signal running event (corresponding to ALARM_RTSC_RUNNING_INFO)
#define EVENT_RTSC_TRAFFIC				   0x5004      // Signal traffic information event (corresponding to ALARM_RTSC_TRAFFIC_INFO)

// HY alarm event
#define EVENT_HYBRID_FIRE_DETECTION             0x6001      // Fire flame detection events (corresponding to ALARM_HY_FIRE_DETECTION_INFO)
#define EVENT_HYBRID_SMOG_DETECTION             0x6002      // Fire smoke detection events (corresponding to ALARM_HY_SMOG_DETECTION_INFO)
#define EVENT_HYBRID_INFIRE_PASSAGE_DETECTION   0x6003      // Fire evacuation passage blocking event (corresponding to ALARM_HY_INFIRE_PASSAGE_DETECTION_INFO)
#define EVENT_HYBRID_OUTFIRE_PASSAGE_DETECTION  0x6004      // Occupation of fire-fighting vehicle passageway/occupation of fire-fighting climbing surface (corresponding to ALARM_HY_OUTFIRE_PASSAGE_DETECTION_INFO)
#define EVENT_HYBRID_MAN_LEAVING_DETECTION      0x6005      // Personnel leaving the fire control room (corresponding to ALARM_HY_MAN_LEAVING_DETECTION_INFO)
#define EVENT_HYBRID_FIRE_CONTROL_OFFLINE_FAULT 0x6006      // Fire contol offline fault(corresponding to ALARM_HY_FIRE_CONTROL_OFFLINE_FAULT_INFO)
#define EVENT_HYBRID_FIRE_CONTROL_SENSOR_FAULT  0x6007      // Fire contol sensor fault(corresponding to ALARM_HY_FIRE_CONTROL_SENSOR_FAULT_INFO)
#define EVENT_HYBRID_FIRE_CONTROL_DISMANTLE_FAULT    0x6008      // Fire contol dismantle fault(corresponding to ALARM_HY_FIRE_CONTROL_DISMANTLE_FAULT_INFO)

// Security inspection alarm events
#define EVENT_XRAY_PIP_COMMUNICATION_ABNORMITY		0x7001			// XRayPIPCommunicationAbnormity(corresponding to ALARM_XRAY_PIP_COMMUNICATION_ABNORMITY_INFO)
#define EVENT_XRAY_ACQUISITION_SYSTEM_ABNORMITY 		0x7002			// XRayAcquisitionSystemAbnormity(corresponding to ALARM_XRAY_ACQUISITION_SYSTEM_ABNORMITY_INFO)
#define EVENT_XRAY_EMERGENCY_STOP 					0x7003			// XRayEmergencyStop(corresponding to ALARM_XRAY_EMERGENCY_STOP_INFO)
#define EVENT_XRAY_DETECTOR_PROTECTION_OPEN 			0x7004			// XRayDetectorProtectionOpen(corresponding to ALARM_XRAY_DETECTOR_PROTECTION_OPEN_INFO)
#define EVENT_XRAY_MACHINE_SHELL_OPEN 				0x7005			// XRayMachineShellOpen(corresponding to ALARM_XRAY_MACHINE_SHELL_OPEN_INFO)
#define EVENT_XRAY_KEYBOARD_ABNORMITY 				0x7006			// XRayKeyboardAbnormity(corresponding to ALARM_XRAY_KEYBOARD_ABNORMITY_INFO)
#define EVENT_XRAY_TRANSMISSION_BELT_ABNORMITY		0x7007			// XRayTransmissionBeltAbnormity(corresponding to ALARM_XRAY_TRANSMISSION_BELT_ABNORMITY_INFO)
#define EVENT_POWER_GROUND_DETECTION_ABNORMAL 		0x7008			// PowerGroundDetectionAbnormal(corresponding to ALARM_POWER_GROUND_DETECTION_ABNORMAL_INFO)
#define EVENT_XRAY_SOURCE_ABNORMITY  				0x7009			// XRaySourceAbnormity(corresponding to ALARM_XRAY_SOURCE_ABNORMITY_INFO)

#endif // EVENT_CONSTANTS_H
